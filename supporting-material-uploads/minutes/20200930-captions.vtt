WEBVTT

1
00:00:00.000 --> 00:00:00.329
Peter Rushforth: The

2
00:00:02.220 --> 00:00:05.279
Peter Rushforth: First, first workshop on map for the web.

3
00:00:07.080 --> 00:00:09.690
Peter Rushforth: Week 2 Day 3

4
00:00:11.130 --> 00:00:11.400
Peter Rushforth: We are going to record this and I'm going to start over.

5
00:00:18.779 --> 00:00:24.630
Peter Rushforth: Sorry Ted, I don't have recording permission and so, oh it's already recording. Very good. So moving on.

6
00:00:26.460 --> 00:00:33.300
Peter Rushforth: So today's theme of talks is going to be advanced web graphics for mapping and then followed by a

7
00:00:35.040 --> 00:00:47.430
Peter Rushforth: Stakeholder panel on commercial mapping services and then we'll have a breakout breakout session on collaborative web mapping by Karel Charvat and his team.

8
00:00:48.300 --> 00:00:59.580
Peter Rushforth: And I just like to remind you that we have a Gitter chat channel open all the time. So that's a good place to have threaded discussions about about ongoing topics and

9
00:01:00.330 --> 00:01:12.720
Peter Rushforth: The presenters will certainly welcome discussion, and after the presentations today, I will create Discourse topics in the web incubator community group for each of the presentations to

10
00:01:13.980 --> 00:01:15.180
Peter Rushforth: So that we can comment.

11
00:01:16.200 --> 00:01:21.900
Peter Rushforth: on an ongoing basis there about web mapping, it helps to gain attention to the topic of web mapping

12
00:01:23.190 --> 00:01:35.790
Peter Rushforth: In the browser community. I'd like to remind everybody that the workshop is conducted under the W3C code of conduct which is linked from the, each workshop page.

13
00:01:36.810 --> 00:01:38.580
Peter Rushforth: So with that, I'd like to hand over the

14
00:01:39.720 --> 00:01:44.550
Peter Rushforth: Presenter controls to Iv치n S치nchez Ortega of the Leaflet Community, he's going to give us a presentation on

15
00:01:51.150 --> 00:01:52.200
Peter Rushforth: Map adventures in Weird web standards, gyroscopes, texture cubes and mutants

16
00:01:56.100 --> 00:01:56.550
IvanSanchez: That's me.

17
00:01:59.730 --> 00:02:00.060
IvanSanchez: Perfect.

18
00:02:02.520 --> 00:02:04.350
IvanSanchez: So I won't be here too.

19
00:02:07.980 --> 00:02:19.230
IvanSanchez: Okay so hi everybody. This is me Iv치n S치nchez, I'm going to talk about joysticks, texture cubes and mutants, I have to change that, for reasons that will be later.

20
00:02:20.160 --> 00:02:28.020
IvanSanchez: So for those who don't know me, I am a nerd. I have been doing this lecture, maps and webs literally 15 years ago.

21
00:02:28.860 --> 00:02:38.670
IvanSanchez: My allegiances are towards OpenStreetMap. I have been a member of the board of the foundation a few years ago. I am a charter member of OSGeo and I am a maintainer

22
00:02:41.670 --> 00:02:54.450
IvanSanchez: of Leaflet. I am very skeptical of this proposal, so skeptical that I cannot tell you why in 15 minutes so I wrote a lengthy essay about it, it's my position statement as well. So please read it if you have a time

23
00:02:55.680 --> 00:03:05.190
IvanSanchez: To save half your time, I'm going to focus on this part of the joke. I don't think that the MapML standard covers use cases. I know this

24
00:03:05.730 --> 00:03:15.150
IvanSanchez: Because I have been dealing with approving Leaflet plugins for a while and they are literally hundreds, each plugin is a use case. And I don't think

25
00:03:15.660 --> 00:03:25.320
IvanSanchez: The standard as it currently stands, is able to cover all those use cases or even to accept the integration needed to cover these use cases.

26
00:03:25.680 --> 00:03:32.310
IvanSanchez: Since I really short on time I'm going to focus on integrations with existing browser APIs in particular,

27
00:03:32.610 --> 00:03:43.980
IvanSanchez: a few APIs that you probably didn't know that existed, which are the Gamepad API, the textStorage3D from what we have to DOM mutation observers. So let's get on with it. Joysticks.

28
00:03:45.300 --> 00:03:53.910
IvanSanchez: How do we interact with maps. We do most in our scripts, pointer events, we do keyboard events. We also follow the user via Geolocation API.

29
00:03:54.270 --> 00:04:00.450
IvanSanchez: We also rotate the map, when we are navigating with the compass orientation with relative orientation sensors API.

30
00:04:00.960 --> 00:04:15.750
IvanSanchez: We can also do an experiment about tilting a phone tablet and then making them up slide off the surface of the phone and tablet, by adapt some traditional sensor which I didn't really have time to play with the demo, but you can also do joysticks via the Gamepad API.

31
00:04:16.860 --> 00:04:25.620
IvanSanchez: And moving things with a Joystick actually works. It works nice. It's easy to do something like this. You just hook up

32
00:04:26.760 --> 00:04:36.300
IvanSanchez: The new events and works and it's an interaction that nobody really has been thinking about, works pretty well with Gamepads as well.

33
00:04:37.230 --> 00:04:47.310
IvanSanchez: And I have to say, this feels good. And I also have this feeling that interaction with joysticks or gamepad it's something that

34
00:04:48.210 --> 00:04:56.190
IvanSanchez: I don't know what it's useful for but I feel like this is really useful for something. I don't know what for, still.

35
00:04:56.790 --> 00:05:15.180
IvanSanchez: So if this has hooks to haptic peripherals, maybe under that, maybe we want some accessibility features, because some people might handle a controller below keyboard and mouse. I don't know how that would work work and I don't know how these kind of interactivity belongs or works with

36
00:05:16.980 --> 00:05:18.450
IvanSanchez: With my, with MapML at all.

37
00:05:20.400 --> 00:05:21.450
IvanSanchez: One of the things I'm not sure about.

38
00:05:22.740 --> 00:05:31.080
IvanSanchez: I'm going to talk now about Texture Cubes. So back when it was 2017, I was doing some weird experiments

39
00:05:31.560 --> 00:05:38.850
IvanSanchez: Replacing the images from tile maps with canvases. And each canvas receives a buffer from Web GL and then you handle the textures and

40
00:05:39.660 --> 00:05:49.170
IvanSanchez: The tile goes through a whole process to basically change the color. And I have this feeling of this is useful for something. I don't know what, what for, but this has to be useful for something.

41
00:05:50.520 --> 00:05:59.640
IvanSanchez: So one of the things I learned, and this is important to keep in mind is WebGL or OpenGL is not a 3D engine. It's a 2D rasterization engine,

42
00:06:00.000 --> 00:06:08.520
IvanSanchez: That takes a lot of four dimensional vectors, combines it with buttloads of linear algebra and uses images as texture and before the Code of Conduct police comes to me.

43
00:06:08.760 --> 00:06:18.360
IvanSanchez: And different about most of the youth the unit of measurement of alcoholic beverages, which is, in my opinion, with one person needs to really understand what the hell is going on in linear algebra

44
00:06:20.760 --> 00:06:28.230
IvanSanchez: You know, a normal person will  think that a picture is just an image, a color image, 8-bit red and blue. And that's it.

45
00:06:28.860 --> 00:06:40.170
IvanSanchez: For instance, people who have been working in video games, know that textures coming more than images, do you have something like the bump map, plus specular map, which is how a surface reflects the light that goes into a surface.

46
00:06:40.530 --> 00:06:48.510
IvanSanchez: And that can be put as different formats 5-5-6 bits, 16-bit or float32, it's not it's not necessarily 8-bit.

47
00:06:49.050 --> 00:07:08.670
IvanSanchez: Then when you come to learn to learn what the GIS nerds are doing, for them, raster data is temporal multispectral/thematic data, which is a lot of tiny little squares and or cubes which each  holding 16 or 32-bit examples, one or more samples per pixel or per boxel.

48
00:07:10.410 --> 00:07:19.770
IvanSanchez: The breakthrough is realizing that the GIS raster data feeds natively into geotextures, and I mean presently nobody has noticed this before.

49
00:07:21.090 --> 00:07:28.530
IvanSanchez: So you can use get data from GeoTIFF, put the texture and that will get the texture and that will get the native data,

50
00:07:29.100 --> 00:07:42.180
IvanSanchez: The raw data with no transformations from the GeoTiff file. One of the nicest things about WebGL2 is that you get float32 format and you get actual data cubes in the form of 3D textures.

51
00:07:42.480 --> 00:07:51.630
IvanSanchez: So in this example in getting, this pseudo code. Anyway, but you get the idea. I can get several samples from a GeoTiff file. And since they are packed together, one

52
00:07:52.140 --> 00:08:00.150
IvanSanchez: After the other, they will have the same format or the same data structure that 3D textures need for this.

53
00:08:00.720 --> 00:08:09.240
IvanSanchez: And then you just fetch the initiator and then you can fit coordinates, you can use. In this example I will be using just the different

54
00:08:10.170 --> 00:08:16.830
IvanSanchez: Channels are the same as samples of a GeoTiff file or the set coordinate, but you could easily, easily change these

55
00:08:17.580 --> 00:08:23.250
IvanSanchez: handle the coordinates with a buttload of linear algebra to access changes or whatever you want.

56
00:08:23.670 --> 00:08:31.380
IvanSanchez: One up sample. I have been working on is this one with some sentinel data in this I have an actual data cube or tile.

57
00:08:31.860 --> 00:08:39.900
IvanSanchez: It's of the 253 256 a pixel style. It's not a tile, It's a small data cube like 256, 256 by 7,

58
00:08:40.410 --> 00:08:52.380
IvanSanchez: So you can fetch textures for any of those points, I can do the linear interpolation between the points, you can do all that kind of stuff. And I can do something nice, really nice, which is real time raster processing and analysis, which is

59
00:08:54.300 --> 00:08:56.310
IvanSanchez: For me it's just beautiful.

60
00:08:57.510 --> 00:09:07.260
IvanSanchez: Things like this. I don't know what I'm doing. But I'm doing the real time on the GPU with a raw 16-bit GeoData from actual Sentinel satellites. This is great.

61
00:09:08.460 --> 00:09:19.080
IvanSanchez: I want to throw some buzzwords at you because I feel like doing this. It makes me a cool person. This is real time, meaning it happens once per frame which for for normal people is real time.

62
00:09:19.530 --> 00:09:22.830
IvanSanchez: For electronics people it's not real time. It's a different

63
00:09:23.400 --> 00:09:33.420
IvanSanchez: Discussion. This is real time GPU-accelerated because it happens in a graphics card. It's cloudless because it doesn't depend on this cloud of servers, which are somewhere that you don't worry about

64
00:09:34.410 --> 00:09:45.360
IvanSanchez: It's edge computing because it happens on the user's computer. It's for cloudless imagery because you can apply the algorithms for removing clouds from Sentinel data for multi or

65
00:09:45.750 --> 00:10:01.320
IvanSanchez: Hyperspectral data. And one of the issues I think this has is that it's difficult to monetize because we've, cloud computing, it's really easy to know how many CPU cycles you have been selling to the users, but once that happens on the user's computer

66
00:10:02.460 --> 00:10:12.930
IvanSanchez: You can't really measure how much work the user's computer has done using your code. So yeah, there's not a lot of money and people involved in this kind of research. Right.

67
00:10:13.500 --> 00:10:23.040
IvanSanchez: Anyhow, I do predict by the in three years time, every GIS person involved in Earth observation and raster analysis will ask themselves how did we not do this sooner.

68
00:10:25.140 --> 00:10:33.660
IvanSanchez: I don't know how MapML will work with this, and seeing the performance of GL and having seen how a low level data abstractions work,

69
00:10:34.320 --> 00:10:47.910
IvanSanchez: I do not know how can we squeeze this thing. I do not know how can we make non 3D GL more accessible to any other developers, because geo has a lot of potential for raster analysis and we're not squeezing it

70
00:10:48.330 --> 00:10:59.460
IvanSanchez: I think it's because the APIs. Whenever we talk about WebGL, We already think, we are already thinking into 3D and 3D models and a camera and an object and light sources.

71
00:11:00.120 --> 00:11:15.810
IvanSanchez: How can we change this perception, because if we change this perception. I think we will improve raster analyses and any other kinds of sciences. I don't know. I want to make this happen. So I don't know how to get rid of the preconception that we should use SVG for

72
00:11:16.950 --> 00:11:20.340
IvanSanchez: For doing graphics. I don't know. I'm unsure.

73
00:11:22.590 --> 00:11:26.370
IvanSanchez: I'm going to go to part three. So mutants.

74
00:11:27.570 --> 00:11:39.540
IvanSanchez: And I'm going to start with this fact that I am not going to accept any discussion on this fact. Leaflet users want to display Google Basemaps, they want to. This is a fact.

75
00:11:40.920 --> 00:11:50.310
IvanSanchez: Now it's easy. You just put this tile definition and it works. And you have to do nothing else and you know one line of code, it works.

76
00:11:51.960 --> 00:11:52.170
IvanSanchez: But.

77
00:11:54.660 --> 00:12:05.820
IvanSanchez: Google doesn't want you to do that at least if they didn't, as of 2018, with this wording of the terms of service, you might not access map tiles through interfaces that are not documented

78
00:12:06.240 --> 00:12:18.000
IvanSanchez: Or that you don't have access to. The wording of the current terms of services are not clear. So I know that Parsons is somewhere in the room. So can I have a clarification of this, please. Pretty please with sugar on top?

79
00:12:19.140 --> 00:12:30.810
IvanSanchez: Anyhow, how do you overcome this limitation. What do you do you get a Leaflet, one side of the screen and a Google map on another side of the screen. Do you hook them up so whenever you move the Leaflet map the Google Map morphs

80
00:12:31.290 --> 00:12:38.100
IvanSanchez: Whenever you zoom, the Leaflet map, the  Google Map moves and then you do CSS trickery.

81
00:12:39.690 --> 00:12:50.670
IvanSanchez: And it works. It kind of works. So right now you can do Leaflet with some Google Base maps and but, that lags, a lot of lagging

82
00:12:51.480 --> 00:12:56.940
IvanSanchez: There's a lot of lag when you're moving it because the Google Map will lag at least one frame behind,

83
00:12:57.360 --> 00:13:06.240
IvanSanchez: And when you're zooming, zooming you see animations that not, that don't follow the same function so stuff gets, not very user friendly.

84
00:13:06.780 --> 00:13:21.060
IvanSanchez: So you can overcome that by doing DOM manipulation, which is even dirtier. So you make the same thing. You hook them up. So whenever the Leaflet map moves, the Google Map moves and then you manipulate the DOM to steal the titles.

85
00:13:22.620 --> 00:13:35.700
IvanSanchez: And it works. And now the tiles and the Leaflet container and there's no lag because the movements are controlled only by Leaflet I don't care what the Google map might be doing with her and now empty tile container.

86
00:13:38.370 --> 00:13:53.280
IvanSanchez: You have to resteal the tiles anytime you move and there's a lot of race conditions because this synchronous because it depends on the network. And then you have so many issues. So the synchronicity is hard. And you know what new tiles will come in.

87
00:13:54.750 --> 00:13:56.670
IvanSanchez: So you can use mutation observers.

88
00:13:58.020 --> 00:14:07.560
IvanSanchez: Do you lose some, you create a container or for the Google Map, then you set an observer and you get told whenever any DOM element is created inside that

89
00:14:08.160 --> 00:14:18.390
IvanSanchez: In that in that way you can automatically steal the tiles to your document DOM fragment whenever the title is ready. And it works! And it works pretty nicely.

90
00:14:19.410 --> 00:14:19.890
IvanSanchez: So,

91
00:14:21.300 --> 00:14:30.480
IvanSanchez: It just works. And obviously, there's the same CSS trickery to get logo on the bottom and stuff like that. But it works and compared to Leaflet

92
00:14:31.080 --> 00:14:41.100
IvanSanchez: Native geometries, there's absolutely no lag whatsoever. The zoom is perfect. It just works. Now this has been called and for me this is high praise.

93
00:14:41.640 --> 00:14:48.480
IvanSanchez: "Absolutely brilliant and terrible at the same time." And I think so. This is somethign that shouldn't exist.

94
00:14:49.440 --> 00:14:57.360
IvanSanchez: And this is, to me, one of my hard points of view, might be controversial, but I, this is one of the hills I will die on

95
00:14:57.870 --> 00:15:02.430
IvanSanchez: Vendors should be able to expose, should be exposing standard interfaces.

96
00:15:03.300 --> 00:15:24.360
IvanSanchez: Authors should be able to cache all the map assets. Clients should be able to interchangem exchange the those map assets by P2P, because one of the excuses that we have been given for paying for maps is that there is a cost associated with it, if it was peer to peer that cost would go down.

97
00:15:25.680 --> 00:15:33.120
IvanSanchez: So that's something that, for me, it's quite important. I also think that DOM mutation observers shouldn't exist, they break

98
00:15:33.720 --> 00:15:44.070
IvanSanchez: The encapsulation of coding web applications. And it's the as dirty, it allows very dirty hacks and Google Mutant as a whole as a concept, It shouldn't exist. I shouldn't

99
00:15:44.580 --> 00:15:56.310
IvanSanchez: Have to spend any time making it. Really, it has no reason, there should be no reason for it to exist at all. So one of my biggest complaints or

100
00:15:56.730 --> 00:16:08.010
IvanSanchez: Critiques about MapML is that MapML shall not fix any of this. MapML will will not make vendors explose standard interfaces, will not author cache map assets so they can

101
00:16:08.490 --> 00:16:15.660
IvanSanchez: They can control all the things that they displaying their web pages, it will not let clients P2P-exchange map assets, it would be a boon for all

102
00:16:15.930 --> 00:16:25.320
IvanSanchez: For everybody. It will not deprecate browser APIs, because we all, we only put more and more and more and more in browsers and it will not stop people from doing ugly hacks.

103
00:16:26.430 --> 00:16:32.490
IvanSanchez: That's my main point about why I don't like MapML, or very condensed in this short talk

104
00:16:33.660 --> 00:16:36.810
IvanSanchez: And that's what I have. Please read my essay, and that's it.

105
00:16:38.340 --> 00:16:47.430
Peter Rushforth: Well, thank you Ivan for that excited tour of your, your thinking on the subject and I put a few comments in chat and I'm happy to engage on that.

106
00:16:49.590 --> 00:16:52.830
Peter Rushforth: So, with that, we're going to move on to

107
00:16:54.840 --> 00:16:59.340
Peter Rushforth: Our next presentation, which is map compositions format by Karel Charvat.

108
00:17:09.180 --> 00:17:09.810
Peter Rushforth: Karel, over to you.

109
00:17:12.330 --> 00:17:13.350
Peter Rushforth: I think you're on mute.

110
00:17:15.810 --> 00:17:16.440
Karel Charvat: Hello?

111
00:17:17.640 --> 00:17:30.540
Karel Charvat: Thanks to give us chance to make our presentation here, now in just short introduction, I will only make some messy,

112
00:17:32.280 --> 00:17:36.450
Karel Charvat: short messages about what we are doing and

113
00:17:37.500 --> 00:17:50.970
Karel Charvat: To the data, we will present it later in breakout session where my colleagues or will give you also more technical details so

114
00:17:52.290 --> 00:18:04.170
Karel Charvat: Ivan before spoke about things related to his Leaflet. We will now move to other technologies more or to OpenLayers and

115
00:18:05.550 --> 00:18:24.270
Karel Charvat: QGIS but first I will tell about what and why we are speaking about map composition. What Ivan presented it was mainly focus on some expert work with

116
00:18:25.740 --> 00:18:32.850
Karel Charvat: Geographic information. But what what is clear.

117
00:18:40.290 --> 00:18:45.420
Karel Charvat: Sorry, why is this not working. I'm not able to move past this image.

118
00:18:57.870 --> 00:19:01.710
Karel Charvat: I have problem to move to move this presentation. I don't know why.

119
00:19:02.850 --> 00:19:03.300
Peter Rushforth: Um,

120
00:19:04.920 --> 00:19:07.500
Peter Rushforth: Are you sharing it off your desktop or from the web.

121
00:19:07.860 --> 00:19:11.550
Karel Charvat: No, I, I'm doing this is from my desktop as

122
00:19:12.600 --> 00:19:15.270
Peter Rushforth: Well maybe exit presentation mode and go back in.

123
00:19:18.210 --> 00:19:27.600
Ted Guild: At the bottom boundary I was also seeing a next, next and back button too. Move your mouse, the bottom, can move your mouse to the bottom.

124
00:19:29.250 --> 00:19:35.310
Ted Guild: The presentation, you're hovering over or the end. I've seen some some buttons here.

125
00:19:36.480 --> 00:19:37.560
Karel Charvat: Where are the buttons? I don't see

126
00:19:37.620 --> 00:19:38.700
Ted Guild: You move further down

127
00:19:40.230 --> 00:19:41.310
Ted Guild: Move your mouse further down

128
00:19:41.940 --> 00:19:43.620
Ted Guild: Here you go.

129
00:19:44.190 --> 00:19:55.680
Karel Charvat: Now, okay, okay. Sorry for this. So why we are speaking about map composition and we will speak also not only about map composition, but about

130
00:19:56.850 --> 00:20:01.230
Karel Charvat: Cooperation, if you are looking on the classical map.

131
00:20:01.560 --> 00:20:02.760
Karel Charvat: Is there is a

132
00:20:03.540 --> 00:20:16.560
Karel Charvat: Number of different information now with your geographic information systems, we are dealing with layers. Yes, but layers are not map, and what is important.

133
00:20:17.130 --> 00:20:41.820
Karel Charvat: For people who are not expert, to move from layers to maps. We open this first time when we develop, you know, the Czech Inspire Geo Portal, it was around 2010 you can see on one side how it looks on maps, on the other side, if we are looking on the data. It looks approximately

134
00:20:42.990 --> 00:20:49.260
Karel Charvat: Such but we have to move from this layer paradigm to

135
00:20:50.910 --> 00:21:02.670
Karel Charvat: paradigm also map and first time we talked about this when we implemented this Inspire Geo portal and in this time we start to use web map context.

136
00:21:04.860 --> 00:21:18.810
Karel Charvat: In the past, some OGC standard about with some limitation, and this limitation was mainly that it will work only with the WMS services and not there are no possibility to integrate

137
00:21:19.830 --> 00:21:35.340
Karel Charvat: Other data, but we extended this, in this time to this concept and on the Czech Inspire Geo portal we start to offer to the people thematic maps, not layers but the non expert was able to select the

138
00:21:36.270 --> 00:21:43.980
Karel Charvat: Some concrete composition of layers and work with this because for many people it is very difficult to understand,

139
00:21:45.600 --> 00:21:53.490
Karel Charvat: WMS, understand other things, and also decided in which scale, you have to put the

140
00:21:54.570 --> 00:22:05.910
Karel Charvat: which layer. So this could be or has to be in some way described in this map composition or what we are now calling the maps. You can see here we have

141
00:22:06.390 --> 00:22:22.530
Karel Charvat: Number of layers, but on the entry to have the maps, for example, just combination of this satellite images, OpenStreetMap or other, and we have a huge number of new technologies HTML, CSS, JSON and

142
00:22:24.510 --> 00:22:35.670
Karel Charvat: It is important to use this technology, how to describe map, we develop our own JSON format for describing of map composition later in the evening, right, this will

143
00:22:36.510 --> 00:22:55.260
Karel Charvat: Tell you about this. And I think that today we think is also good opportunity. How to discuss and speak, how, for example, this approach, which we are now pushing, can be combined with other effort and other standard in OGC or in W3C and

144
00:22:56.820 --> 00:23:14.910
Karel Charvat: Having here, my colleague, I think that it is a good opportunity to start discussion with other, how we can combine this our approach, which is now used very often, we implemented this approach, not only for OpenLayers, but we are able to share maps with

145
00:23:16.380 --> 00:23:27.270
Karel Charvat: QGIS and we start also some tests, with Leaflet. So the idea is that the map is defined and could be shared.

146
00:23:28.680 --> 00:23:38.310
Karel Charvat: On other places. Yes. Right, you are now sharing music, you are sharing other you can have the silos and you can from the silos, you'll be able

147
00:23:38.760 --> 00:24:00.360
Karel Charvat: To share the map. The silos could be some map catalog, not only catalogs for WMS services or other, but to have the catalogs also the maps and to be able to share with other people, you know the maps. Second thing, we you will today speak much more is

148
00:24:01.440 --> 00:24:05.790
Karel Charvat: What we are calling now map whiteboard. What is it,

149
00:24:07.500 --> 00:24:21.330
Karel Charvat: You are probably all working with Google Documents. Google Documents is something where you can share the text and many people can edit this text

150
00:24:22.170 --> 00:24:39.030
Karel Charvat: From different places and collaborative way you can work with the map. It could be important for many application for education. It could be good for farmers, it could be good in

151
00:24:39.720 --> 00:24:47.220
Karel Charvat: Crisis Management. If you are able to share the maps, you are able to share all else, you are able to

152
00:24:47.670 --> 00:25:05.520
Karel Charvat: Share your drawings immediately and other people can communicate, who is this of course this is now more and more important in covid period to have real collaborative work. And this is what we are now working and what we will speak, as I mentioned, there is so many

153
00:25:07.200 --> 00:25:25.140
Karel Charvat: Many application where this could be used, of course, in education, typical place would be spatial planning, it could be agriculture, to be possible to share the maps and to edit the maps collaboratively and to share this map with

154
00:25:26.580 --> 00:25:45.000
Karel Charvat: Other people. So this is some short introduction, and I hope that some from you will be able to stay to the end and we will be able to expand you in today what is our map position. And what is this map whiteboard.

155
00:26:00.660 --> 00:26:01.230
Karel Charvat: Hello.

156
00:26:07.980 --> 00:26:09.030
Peter Rushforth: Sorry. Thank you very much Karel.

157
00:26:11.040 --> 00:26:15.930
Peter Rushforth: We're going to move on to Daniel Morrissette of Mapgears who will be talking about

158
00:26:17.700 --> 00:26:22.830
Peter Rushforth: The implementation of MapML and Map Server GDAL and OGR. over to you, Daniel.

159
00:26:23.730 --> 00:26:25.980
Daniel Morissette: Thank you, Peter. So my slides are on right

160
00:26:28.350 --> 00:26:28.890
Daniel Morissette: As soon so

161
00:26:29.520 --> 00:26:30.030
Daniel Morissette: So,

162
00:26:30.270 --> 00:26:41.850
Daniel Morissette: Talk about yeah the implementations that we put in place a Map Server GDAL and OGR essentially kicking the tires to see how it goes with the current draft version of the spec as of the spring.

163
00:26:44.340 --> 00:26:49.980
Daniel Morissette: Okay, so for those who may not be from the GIS World, Map Server is a web mapping engine.

164
00:26:51.000 --> 00:27:07.260
Daniel Morissette: Open Source web mapping engine, the GDAL library is, I guess, the Swiss Army Knife of GIS. It's a library that supports hundreds of raster and vector data formats and both are open source projects of the Open Source Geospatial Foundation

165
00:27:08.280 --> 00:27:15.990
Daniel Morissette: So the stuff I'm going to talk about today's implemented and available as a reference implementation in open source format.

166
00:27:17.250 --> 00:27:27.540
Daniel Morissette: First for the keys of Map Server, there's a link to the documentation there. It's been discussed in MapServer RFC 123 is going to be included in the MapServer 8 release.

167
00:27:28.470 --> 00:27:36.840
Daniel Morissette: At the moment it's available to a git, source, GitHub source fork, but the implementation is going to be released later this fall.

168
00:27:37.950 --> 00:27:47.490
Daniel Morissette: Essentially, for those who know Map Server. You've probably all already published WMS an OGC WMS Service. So all you need is a WMS enabled map file that you've got already

169
00:27:48.270 --> 00:27:59.340
Daniel Morissette: you enable the GetMapML, a new vendor specific GetMapML request, and that's it. The rest is magic handled by Map Server and the polyfill viewer through the MapML Spec so

170
00:27:59.760 --> 00:28:06.390
Daniel Morissette: Essentially in your map layer tags, know the MapML layer tags, you include

171
00:28:07.320 --> 00:28:21.630
Daniel Morissette: A custom URL, which is service=WMS&request=GetMapML, and then you specify which layer, you're referring to, from your map file and the projection using the projection code, the MapML production code. So essentially,

172
00:28:23.220 --> 00:28:25.050
Daniel Morissette: Yeah, it looks like this in the HTML.

173
00:28:26.130 --> 00:28:26.670
Daniel Morissette: And

174
00:28:27.720 --> 00:28:31.230
Daniel Morissette: Yeah, this is the actual source code from an example.

175
00:28:33.030 --> 00:28:39.270
Daniel Morissette: And I'm gonna swap to just to show to show it in action. Just show that it's a real thing and it really works. So

176
00:28:39.600 --> 00:28:48.510
Daniel Morissette: I this is by the way, this is the documentation from the MapServer side. So it talks about the metadata elements, the configuration elements that you can use to control the behaviors.

177
00:28:49.290 --> 00:28:55.800
Daniel Morissette: And essentially, the viewer looks like this. So it's just a simple Leaflet. It's the polyfill viewer that you are that you're seeing here.

178
00:28:56.280 --> 00:29:05.220
Daniel Morissette: Pointing to WMS layer. So the source code of this page is this with this GetMapML URL pointing to the Map Server map file.

179
00:29:05.790 --> 00:29:13.800
Daniel Morissette: And if you look at the source of what Map Server returns. It's a MapML document so implementing the draft specification

180
00:29:14.670 --> 00:29:23.610
Daniel Morissette: Which contains link rel="image" so full screen image maps are requested using this URL template.

181
00:29:24.360 --> 00:29:38.010
Daniel Morissette: And for the get, when you query the map. So the link rel="query" points to GetFeatureInfo using the template. So all this you know this is a bit verbose, but it's all handled by Map Server, you don't need to do any of that really all the

182
00:29:39.150 --> 00:29:50.970
Daniel Morissette: All you need to do is create this layer element in your HTML to make it work and have a Map Server WMS and rebuild Map Server map file. So back to the slides.

183
00:29:55.980 --> 00:30:01.650
Daniel Morissette: Yep. So that's what I talked about. There's a, so the case, I've been showing was the link rel="image" which returns

184
00:30:01.920 --> 00:30:09.000
Daniel Morissette: full page WMS request, but the implementation also support tiled request. So you can request tiled WS request or

185
00:30:09.420 --> 00:30:14.460
Daniel Morissette: There's a custom mode mapserv which is mode="tile" which mimics I believe the Google Maps API

186
00:30:15.060 --> 00:30:24.900
Daniel Morissette: Tile requests or that one is supported as well. There is a future plan to have the ability to do a WFS get feature we using link rel="feature". And as I mentioned earlier,

187
00:30:25.440 --> 00:30:30.420
Daniel Morissette: Link rel="query" would point to Get FeatureInfo to the WMS GetFeature and forth to allow you to query the map.

188
00:30:31.800 --> 00:30:35.130
Daniel Morissette: So that's it for the Map Server implementation and now

189
00:30:36.420 --> 00:30:41.760
Daniel Morissette: For those who like to work with data, or would like to generate a static data set and host it without

190
00:30:42.270 --> 00:30:51.060
Daniel Morissette: Any server side components, an implementation has been made as well on in GDAL for the raster side and in OGR for the vector side. So as I said,

191
00:30:51.540 --> 00:31:00.960
Daniel Morissette: The GDAL library support hundreds of vector and raster formats and what's been done on the OGR side that's been added recently in

192
00:31:01.470 --> 00:31:13.260
Daniel Morissette: OGR version 3.1, which was sometimes in the spring or the summer the documentation is available at this URL. So it's part of the, it's MapML, essentially, an OGR driver.

193
00:31:13.860 --> 00:31:23.310
Daniel Morissette: And it will read and write MapML vector features. So, it reads its own MapML, it will not read any MapML because there could be too many variants

194
00:31:23.940 --> 00:31:32.700
Daniel Morissette: But it will spit out MapML output. And the command for those who are familiar with the ogr2ogr syntax, which is probably not too many people because it's very cryptic,

195
00:31:33.390 --> 00:31:42.480
Daniel Morissette: Essentially, if you were to use it with ogr2ogr. You would specify, let's say, in this case I'm going from a point file, which is a shape file, I'm creating a MapML file.

196
00:31:42.810 --> 00:31:58.440
Daniel Morissette: And I'm running an SQL query on it to just select some attributes I'm interested in, and only select the the populated places have more than 100,000 people and I'm passing some custom contents for the HTML header for the MapML header in this case.

197
00:31:59.520 --> 00:32:09.030
Daniel Morissette: So that's the way to do it on the command line with ogr2ogr. For those who are familiar with that or just export to MapML from an OGR enabled software and

198
00:32:09.720 --> 00:32:20.670
Daniel Morissette: About any piece of GIS software does support OGR so that would make it fairly widely available, then you will refer to this MapML file from earlier element in the map.

199
00:32:22.590 --> 00:32:38.850
Daniel Morissette: To be fair, I, I have had some glitches with the current polyfill trying to do that. So I need to do more tests and probably go back and forth with Peter on the implementation, but the implementation in OGR does produce the valid MapML

200
00:32:39.960 --> 00:32:41.430
Daniel Morissette: And then on the raster side.

201
00:32:43.050 --> 00:32:45.870
Daniel Morissette: The gdal2tiles utility, which can be used to

202
00:32:47.820 --> 00:32:57.300
Daniel Morissette: Taking a raster image and generate a tile pyramid and it can, it already supported the HTML output. So it's been extended to support

203
00:32:57.720 --> 00:33:10.260
Daniel Morissette: MapML output. So essentially when you run it will take a raster image, creatd a tile pyramid, a tileset out of it, and then create a MapML header file that refers to it that you can use to host the data afterwards.

204
00:33:12.210 --> 00:33:17.010
Daniel Morissette: And the command looks something like this. So it's a command line utility in that case.

205
00:33:19.230 --> 00:33:28.170
Daniel Morissette: So, and then you take your output folder and then and place it on your web server to host and refer to it in from your map element in the HTML.

206
00:33:30.000 --> 00:33:38.430
Daniel Morissette: I Have to say that this, the implementations in GDAL and OGR were done by Evan Rouault who is the maintainer of GDAL and OGR so he has to be thanked for that work.

207
00:33:40.350 --> 00:33:46.980
Daniel Morissette: And that's about it. So the quick introductions on three implementations. I know there are more. Geo Server has an implementation as well.

208
00:33:47.520 --> 00:34:02.340
Daniel Morissette: That's been done. And there's a few others that maybe people will be better than me to list, but there's a few reference implementations. So that's, I guess, a good way to start to see the MapML in action and see how it goes.

209
00:34:02.700 --> 00:34:22.530
Peter Rushforth: Yeah, great. Thanks a lot, Daniel. The anyhow. It's great to see a MapML being incorporated into these mainstream open source tools, showing the web platform community that we are in serious and intend to meet them halfway. So what we're trying to get them to come out of their houses.

210
00:34:23.790 --> 00:34:25.500
Peter Rushforth: OK, so moving on to

211
00:34:27.360 --> 00:34:40.080
Peter Rushforth: Our next presentation we're going to have a lightning, lightning round from Andreas Hocevar from the OpenLayers project on Offscreen Canvas for rendering performance and risk. Are you ready to go?

212
00:34:42.030 --> 00:34:44.520
Andreas Hocevar: Ready to go, thank you.

213
00:34:47.820 --> 00:34:51.210
Peter Rushforth: Your audio is a little choppy right now I

214
00:34:52.740 --> 00:34:54.390
Peter Rushforth: Don't know if there's anything you can do but

215
00:34:55.350 --> 00:34:56.460
Andreas Hocevar: Turn on screen sharing

216
00:34:56.820 --> 00:34:57.210
Yeah.

217
00:35:00.540 --> 00:35:16.590
Andreas Hocevar: So I'm going to talk about a way to improve rendering performance of huge vector tiles data sets in OpenLayers. And I guess this topic might be of interest.

218
00:35:17.250 --> 00:35:26.130
Andreas Hocevar: Because as long as MapML is not available in mainstream browsers, mapping libraries will have to provide their own renders

219
00:35:27.000 --> 00:35:44.220
Andreas Hocevar: And the goal here is of a project that was funded as part of the Maps4HTML effort which I'm very thankful for, was proof of concept to improve rendering performance, and avoid blocking the UI in OpenLayers.

220
00:35:45.990 --> 00:35:52.620
Andreas Hocevar: For those who don't come from a web mapping background, OpenLayers is a library for creating interactive maps.

221
00:35:52.950 --> 00:36:00.450
Andreas Hocevar: On the Web and it can display map tiles, which can be raster tiles, like the ones that Daniel was talking about, but also vector tiles.

222
00:36:00.840 --> 00:36:13.650
Andreas Hocevar: Also untiled vector data and super markers loaded from any source on any web page. And this can really be a huge amount of data later on in this presentation I will be showing

223
00:36:14.250 --> 00:36:29.430
Andreas Hocevar: vector tiles data set where a single title which covers more than 512 by 512 pixels on the screen can be more than 500 kilobytes, which translates to 10s of thousands of vectors.

224
00:36:30.120 --> 00:36:44.550
Andreas Hocevar: And unfortunately, the makers of OpenLayers which include myself, are not as smart as  the makers of MapBox GL JS, which has a super fast and performant and good looking

225
00:36:45.090 --> 00:36:55.170
Andreas Hocevar: Web GL renderer in Open Layers.Rendering is done using the canvas 2D API, which means the GPU can not be leveraged to such a high extent.

226
00:36:55.680 --> 00:37:02.760
Andreas Hocevar: And this is also the reason why such heavy maps as I just mentioned can cause slight performance problems.

227
00:37:03.720 --> 00:37:23.820
Andreas Hocevar: So what is the problem. Typical rendering pipeline for Web Map consists of loading data, parsing data, rendering the data and then of course, the user interacting with the data, which means zooming and panning the map, querying attribute informations and things like that.

228
00:37:25.440 --> 00:37:39.600
Andreas Hocevar: With the standard browser APIs for asynchronous, neatly fetching data loading already runs without blocking the UI. So in this graphics that I'm going to show,e each row

229
00:37:40.080 --> 00:37:56.700
Andreas Hocevar: Represents things that that have has to have to be done in parallel. So in this standard OpenLayers map, loading can happen in parallel, while other tasks go on, parsing, rendering and interacting with the data.

230
00:37:58.530 --> 00:38:07.560
Andreas Hocevar: Loading the data is not the problem here. Interesting. It gets interesting with parsing data, the more data you have, the longer it takes to parse it, but the

231
00:38:07.890 --> 00:38:19.170
Andreas Hocevar: The real bottleneck with a canvas 2D render is the rendering process itself, OpenLayers is also very flexible with rendering it allows you to style your map, your vector map

232
00:38:19.590 --> 00:38:24.540
Andreas Hocevar: With functions that can look at each feature and decide based on that, how to render the feature.

233
00:38:24.900 --> 00:38:33.450
Andreas Hocevar: So it's very flexible here and it's all in this context is also not easy to prepare that data in a way that GPU can

234
00:38:33.810 --> 00:38:48.120
Andreas Hocevar: Run it in in a in a parallel way that would give a huge performance benefit. That's also one of the differences to MapBox GL JS where you have styling language and not arbitrary style, JavaScript functions to style your data.

235
00:38:50.340 --> 00:38:50.850
Andreas Hocevar: So,

236
00:38:52.680 --> 00:39:00.330
Andreas Hocevar: One thing we could do would be to use the web workers API that's available in all modern web browsers.

237
00:39:01.650 --> 00:39:09.570
Andreas Hocevar: This would allow us to load and parse data in parallel. And in one thread and to render and interact in another

238
00:39:10.050 --> 00:39:19.740
Andreas Hocevar: The problem here is that transferring data between a worker and the main thread is only efficient with structured data like type arrays.

239
00:39:20.460 --> 00:39:28.020
Andreas Hocevar: And at this stage, we don't have that structured data already. We still have vector data that could be

240
00:39:28.440 --> 00:39:43.470
Andreas Hocevar: Different types of geometries and we have to combine them with styles that are still JavaScript functions. So, we cannot really create a type structure that can be efficiently transferred from the worker to the main thread

241
00:39:45.990 --> 00:40:05.970
Andreas Hocevar: So one solution to that, would be the use of Offscreen Canvas. That's a new API that's already available in Chrome. And what I'm going to show now is a proof of concept of making use of this API.

242
00:40:07.290 --> 00:40:18.540
Andreas Hocevar: By using OffScren canvas, we can also use also put the rendering, separate from interacting with the map, which in

243
00:40:19.320 --> 00:40:37.860
Andreas Hocevar: As a consequence, results in no more blocked UI by heavy calculations going on. So we can load, parse and render the data in a worker, Offscreen Canvas allows us to prepare a canvas in a worker and transfer it efficiently to the main thread, where we interact with the map.

244
00:40:39.090 --> 00:40:46.110
Andreas Hocevar: Now let me show you how that looks. When we apply that technique. In this video I'm going to show on the left.

245
00:40:47.010 --> 00:41:03.090
Andreas Hocevar: You see the use of Offscreen Canvas, on the right you see the same map rendered with OpenLayers, without any any workers and this is the data set I talked about were just a single tile can have tens of thousands of vectors.

246
00:41:04.920 --> 00:41:07.470
Andreas Hocevar: So this is how it looks.

247
00:41:08.790 --> 00:41:27.090
Andreas Hocevar: As you can see on the left, everything smooth. The only delay comes from loading and parsing the data, but the UI is not blocked and you see on the right side how the UI is stuttering as this automatic animation that zooms and pans the map around, is going on.

248
00:41:28.620 --> 00:41:31.080
Andreas Hocevar: So why don't we use this by default.

249
00:41:32.100 --> 00:41:33.540
Andreas Hocevar: As I already mentioned.

250
00:41:34.710 --> 00:41:36.750
Andreas Hocevar: It's already available in Chrome.

251
00:41:37.830 --> 00:41:46.620
Andreas Hocevar: But that's about it. So it's available in the blink engine, which is now also used by Microsoft Edge, there is limited

252
00:41:47.400 --> 00:42:09.450
Andreas Hocevar: Offscren Canvas support in Firefox, but only for WebGL contexts, not for the Canvas2D context that we use in OpenLayers and it's hidden behind an experimental flag, so not available to the average user and it's not available at all in WebKit engine, which is used by Safari.

253
00:42:11.520 --> 00:42:28.560
Andreas Hocevar: So this is, please, WebKit and Gecko developers implement Offscreen Canvas. When this is available in all mainstream browsers, we can provide good performance improvements.

254
00:42:29.670 --> 00:42:41.310
Andreas Hocevar: And it will make it easier to wait until browsers have native map rendering available with MapML in a hopefully not too far away future

255
00:42:42.240 --> 00:43:01.290
Andreas Hocevar: Thanks in advance WebKit and Gecko for implementing that, hopefully soon. And thanks again Maps4HTML community for funding this effort that allowed us to explore the benefits we can gain from using Offscreen Canvas in OpenLayers. Thank you.

256
00:43:01.890 --> 00:43:10.590
Peter Rushforth: Thank you very much Andreas for your contribution to the community and hopefully we'll get some attention for those features in

257
00:43:11.880 --> 00:43:16.830
Peter Rushforth: Safari and Firefox as a result of your efforts. So

258
00:43:18.870 --> 00:43:31.560
Peter Rushforth: Moving on to our next presentation we're going to hear about dynamic and observational spatial data from Thomas Usl칛nder, Hylke van der Schaaf, Katharina Schleidt

259
00:43:33.750 --> 00:43:34.980
Peter Rushforth: Have I pronounced that correctly?

260
00:43:35.790 --> 00:43:37.200
Kathi Schleidt: Mine is correct.

261
00:43:37.770 --> 00:43:41.370
Kathi Schleidt: Anything, Um, can I take the screen.

262
00:43:45.510 --> 00:43:58.050
Kathi Schleidt: Good, working? Yep. Okay. So we're going to start filling, some of the gaps which have been showing up in today's presentations I admit I noticed the word sensor being there and suddenly going away.

263
00:43:58.530 --> 00:44:06.750
Kathi Schleidt: So now it comes back, big time, what are we, what are we talking about these various dynamic data in a spatial context.

264
00:44:07.980 --> 00:44:09.720
Kathi Schleidt: And we start with

265
00:44:11.040 --> 00:44:20.970
Kathi Schleidt: How we provide a basic attributes. So in a normal world. You've got some some object, you have two characteristics of the object, the color, the expression

266
00:44:21.390 --> 00:44:30.690
Kathi Schleidt: These are simple attributes pertaining to the object and they have values and everything is fine until you start realizing you need additional metadata.

267
00:44:31.740 --> 00:44:38.010
Kathi Schleidt: So that's why we've got the observational models where you realize, okay, yes I know the color is yellow, but

268
00:44:38.760 --> 00:44:47.970
Kathi Schleidt: That what methodology, how was that used, what could the colors be, what is the data quality, all of this information is missing with simple attributes.

269
00:44:48.840 --> 00:44:57.780
Kathi Schleidt: And we need this with measurement data. The problem is when you get confronted with a pile of these, it is not easy to play with.

270
00:44:58.500 --> 00:45:08.490
Kathi Schleidt: And so the users get this. They look very confused, what they really want this. This they want nice simple flat tables, they can stuff into there, and get on with it.

271
00:45:09.120 --> 00:45:21.510
Kathi Schleidt: Or some simple way of mapping, but not the holy mess. So they have have a simplified world, but then they start realizing that all of these additional bits were relevant after all.

272
00:45:22.230 --> 00:45:36.930
Kathi Schleidt: And then they're not happy or, and this is where we've been making good progress with SensorThings technology because really allows us the various different viewpoints on this. The only problem is how do we get on to a map.

273
00:45:37.890 --> 00:45:42.840
Kathi Schleidt: So a short background of SensorThings as I'm aware of this community is not familiar with this.

274
00:45:43.290 --> 00:45:57.120
Kathi Schleidt: It's a technology that produced by OGC 2016. It comes from the IoT world. It's a wonderful standardized way of representing sensors, actuators also simulations.

275
00:45:57.480 --> 00:46:15.390
Kathi Schleidt: And it's built on a long history of OGC standards dealing with what they refer to a sensor web enablement that's insulated determining how can we get this type of dynamic sensor measurement, observation data sanely connected with with maps and spatial data.

276
00:46:17.310 --> 00:46:23.190
Kathi Schleidt: Relevant domains which is being applied, I mean, it's very strongly in the in the environmental sector.

277
00:46:23.670 --> 00:46:30.420
Kathi Schleidt: It's also used in building management systems, Smart Cities, industry 4.0 is going in this direction, but

278
00:46:30.690 --> 00:46:39.870
Kathi Schleidt: The world has been working with this model, we've realized it's so flexible that one of our recent prototypes has been putting European demography data online and it works beautifully.

279
00:46:40.350 --> 00:46:47.400
Kathi Schleidt: So it's a really a very nice flexible technology. When you've got dynamic data pertaining to your spatial objects.

280
00:46:48.600 --> 00:46:53.760
Kathi Schleidt: Um, okay, that's the bit of the history of it. I'll keep it short.

281
00:46:55.050 --> 00:47:05.700
Kathi Schleidt: What's it about. It's got a core data model in the background, which covers all of the concept we need to really nicely structure measurement data.

282
00:47:06.180 --> 00:47:14.460
Kathi Schleidt: This comes from the background of it is the OGC observations and measurement standard has been formalized as either ISO19156

283
00:47:14.970 --> 00:47:32.130
Kathi Schleidt: That provides its basic core. It's been a bit specialized here for the purpose of SensorThings and provides when has the, the resulting values, but when also has what was observed, how was it observe, Where was it observe, all this information, it's all there.

284
00:47:33.330 --> 00:47:47.010
Kathi Schleidt: But the problem is, okay, let me just more explanation of this. It's based on the OASIS OData model we've got various get, post, patch, put, delete, you can input output all of your data.

285
00:47:47.880 --> 00:48:02.640
Kathi Schleidt: And we've got various query parameters which allow you to really nicely deal with the RESTful interface. And we've got an MQTT interface in the back end, so, totally suited for clicking on sensors, plug and play.

286
00:48:04.410 --> 00:48:17.310
Kathi Schleidt: The problem is the query logic and if you think back to the data model I was showing before, most simple spatial application deal of individual objects with attributes and geometries.

287
00:48:17.700 --> 00:48:33.270
Kathi Schleidt: They do not have this complex structure between the classes. And this is a central in order to really access the data because you need the the pieces from the individual concepts, thus the SensorThings query logic allows you to really,

288
00:48:34.530 --> 00:48:45.930
Kathi Schleidt: You can formulate your queries, based on the graph defined by the data model. And so this way. We basically we haven't come up with a query you cannot formulate and nicely query.

289
00:48:47.430 --> 00:48:55.590
Kathi Schleidt: And what we want to do with this, Here's an example from the Austrian air quality data, you've got to put your data on the map. You've got your points where you have it.

290
00:48:56.040 --> 00:49:00.510
Kathi Schleidt: The problem is what happens you have too many points, you need to put little circles with numbers.

291
00:49:00.870 --> 00:49:09.840
Kathi Schleidt: Want to get to the points, you want to see what is available there, the list here are the observable properties available from the station office now.

292
00:49:10.290 --> 00:49:23.640
Kathi Schleidt: And then if you click on one of these, you want to see the time series of the actual value. This is what we would want. And this is what to at least until a few weeks ago any the developer who want to expose this data have to do manually.

293
00:49:25.920 --> 00:49:36.060
Kathi Schleidt: A further trick which we have there also pertains to multi resolution data. If you zoom in or if you're looking at a very coarse map of Europe, you don't need also details.

294
00:49:36.480 --> 00:49:46.140
Kathi Schleidt: And more you zoom in, the more you really need all of the tricky bits. And we see this nicely. There's an example from from Norway, we've got on the left, we've got the

295
00:49:46.560 --> 00:49:55.260
Kathi Schleidt: Sort of the big picture data which vaguely finds the islands. On the right, we've got the very high, very high resolution each fjord is in their

296
00:49:55.950 --> 00:50:04.620
Kathi Schleidt: Center things allows us to cope with this because one spatial object you have multiple locations. And so we've made good use of this by

297
00:50:05.370 --> 00:50:17.490
Kathi Schleidt: storing all five different resolutions as locations, having a flag in the data showing which resolution it is, and the map viewer pulls the right resolution it needs.

298
00:50:20.370 --> 00:50:29.400
Kathi Schleidt: So what did we do to get out of this. We currently have a, we've been discussing what do we call it, it's not really a plug in, it's for a plug off.

299
00:50:30.270 --> 00:50:42.810
Kathi Schleidt: It's a small little JavaScript library which handles all of the tricky bits we've been discussing, the uh, how do you show the different resolutions, how do you out alternate

300
00:50:43.530 --> 00:50:51.900
Kathi Schleidt: Alternatively show pin pins for the individual stations, you can show if it's too many just provide number

301
00:50:53.640 --> 00:51:10.500
Kathi Schleidt: That various integrated callbacks so you can pre configure it and say, when you click on the point then get this callback to show the observable properties. When you click on individual thing there, all that function to show the graph. It's available on GitHub by the link here.

302
00:51:12.090 --> 00:51:24.030
Kathi Schleidt: Functionality I've shown. Here, We've got an overview of the configuration options. I mean, is basically one large, not even large, medium sized JSON object which you configure

303
00:51:24.720 --> 00:51:28.530
Kathi Schleidt: Fill up fill out these parameters, fill out the parameters. The next page.

304
00:51:29.010 --> 00:51:42.570
Kathi Schleidt: And it then you once you have this filled, you have to tell it is working with Leaflet OpenLayers and then it seamlessly integrates with whatever map software you have underneath, adds all of this functionality, everything is good.

305
00:51:43.650 --> 00:51:50.730
Kathi Schleidt: So conclusion, SensorThings API is becoming increasingly deployed, more and more domains are covering the power of it.

306
00:51:51.630 --> 00:51:58.500
Kathi Schleidt: Map based visualization has been the tricky point and with our SensorThings API map library. We think this is a

307
00:51:59.100 --> 00:52:13.650
Kathi Schleidt: good first step at providing simple support for this. More information that's what was the work was done under the API for INSPIRE project founded by the European ELISE program. More information at the link I presented. Thank you for your attention.

308
00:52:17.490 --> 00:52:26.580
Peter Rushforth: Thank you very much. Kathi, Thomas and Hylke. A very interesting presentation on and

309
00:52:27.630 --> 00:52:43.500
Peter Rushforth: So that's, we're a little bit ahead of schedule but that's good, because that leaves lots of time to chat. And at this point, maybe I'll turn it over to Ted Guild on the W3C who's going to moderate a panel for us today. So I'll

310
00:52:45.870 --> 00:52:46.860
Peter Rushforth: Pass it over to you, Ted.

311
00:52:50.730 --> 00:52:53.640
Ted Guild: Thank you, Peter. My name is Ted Guild I am the

312
00:52:54.780 --> 00:52:58.980
Ted Guild: W3C Automotive Lead and also the contact for geospatial o nthe web.

313
00:53:00.720 --> 00:53:10.920
Ted Guild: And also part of the program committee for this workshop. Today, we will have a stakeholder, stakeholder panel on commercial mapping services on the web from the providers perspective.

314
00:53:11.520 --> 00:53:27.600
Ted Guild: We are joined by number of commercial map service providers, who will give partial overview of their current solutions, as well both business and technical perspectives on specific challenges and opportunities they see for the global map community to consider.

315
00:53:28.680 --> 00:53:31.800
Ted Guild: As we seek to make a HTML maps a first class citizen on the web.

316
00:53:36.420 --> 00:53:41.190
Ted Guild: Peter at the outset, had reminded us about the W3C code of conduct and

317
00:53:42.780 --> 00:53:51.600
Ted Guild: Unlike Chris Wallace in his moderation of the US Presidential Debate, I will not hesitate to mute people trying to speak over each other or trading insults.

318
00:53:52.800 --> 00:53:54.360
Ted Guild: Bad joke maybe, anyhow.

319
00:53:55.860 --> 00:53:58.260
Ted Guild: More seriously, like to have this an open discussion.

320
00:53:58.590 --> 00:54:06.690
Ted Guild: open dialogue and my role is to try and facilitate the conversation, try and engage the various panelists

321
00:54:07.770 --> 00:54:14.550
Ted Guild: To speak to each other directly and when and where possible, I'd like to involve the audience in that as well.

322
00:54:16.530 --> 00:54:24.420
Ted Guild: So with that, I'll introduce the panelists and going alphabetically by last name, we'll start off with Ed Parsons from Google.

323
00:54:25.650 --> 00:54:33.330
Ted Guild: Ed is the geospatial technologist at Google. He's responsible for evangelizing Google's missions, organizing the world's information using geography.

324
00:54:33.900 --> 00:54:42.030
Ted Guild: He's a member of the board of directors for the Open Geospatial Consortium, was co-chair of the W3C OGC Spatial data on the web working group. Ed, could you please

325
00:54:43.350 --> 00:54:45.480
Ted Guild: Further, tell us a little bit about yourself.

326
00:54:46.710 --> 00:54:53.550
Ed Parsons (Google): Hi all, thank you very much Ted, it's great to have two eggs together, two eggs in in one as my mother always used to say.

327
00:54:54.060 --> 00:55:01.470
Ed Parsons (Google): And yeah, I've been involved, I suppose in in geospatial for pretty much all of my career, I set up a

328
00:55:02.160 --> 00:55:16.950
Ed Parsons (Google): Original HTTPD server on an old Mac in my office. When I was an academic, many, many years ago. And one of the first things I tried to do then was to put a map on to a web page using the original map tag in HTML.

329
00:55:18.390 --> 00:55:31.830
Ed Parsons (Google): And I've been trying, I suppose, to make geospatial information more mainstream, more usable ever since. I think we've done a good job in doing that, up until this point in time, and I continue to do that in my job at Google.

330
00:55:34.470 --> 00:55:41.550
Ted Guild: Thank you. Next we have your Johannes Lauer from HERE, Johannes works as the principle technical product manager within the department of content engineering

331
00:55:42.660 --> 00:55:49.230
Ted Guild: at HERE technologies, where community map making, map content ingestion are the main fields of his interest.

332
00:55:50.520 --> 00:55:52.950
Ted Guild:  Johannes, Can you please tell us a bit more about yourself.

333
00:55:57.630 --> 00:56:03.840
Johannes Lauer: Yes, thanks for the brief introduction, Ted. I just have to look for the mute button.

334
00:56:05.160 --> 00:56:17.190
Johannes Lauer: Alright so hi everybody. So my name is Johannes Lauer as Ted mentioned I'm working at HERE technologies. Before joining HERE, roughly five years ago.

335
00:56:17.940 --> 00:56:30.300
Johannes Lauer: I worked at Heidelberg University and did a lot of things about geographic data sets. OpenStreetMap, things like that, volunteer geographic information and parts of my PhD was about

336
00:56:31.080 --> 00:56:40.980
Johannes Lauer: Doing sensor data analytics from agricultural machinery, building maps out of the movement and the telemetry data of tractors.

337
00:56:42.150 --> 00:56:42.660
Johannes Lauer: So,

338
00:56:43.710 --> 00:56:48.450
Johannes Lauer: Yeah, building the digital representation of

339
00:56:49.470 --> 00:56:52.530
Johannes Lauer: The current reality into the map.

340
00:56:54.660 --> 00:56:55.200
Johannes Lauer: All right.

341
00:56:56.580 --> 00:57:07.770
Ted Guild: Thank you. Next, Daniel Lewis from GeoTab. Daniel's a senior data scientists working on smart cities projects and predictive maintenance projects on the data analytics team at GeoTab

342
00:57:08.880 --> 00:57:18.390
Ted Guild: He's focused primarily on leveraging machine learning tools and techniques which is spatial data to create innovative products from connected vehicle data, ranging from congestion analysis.

343
00:57:19.380 --> 00:57:24.690
Ted Guild: To identification that road network changes. Daniel, could you please tell us more about yourself.

344
00:57:25.260 --> 00:57:28.950
Daniel: Sure. Thanks Ted. So yeah, I come into this kind of conference as a

345
00:57:29.610 --> 00:57:37.860
Daniel: Very much a newbie to geospatial data and maps. My background, my undergrad is actually in semiconductor physics and my masters in biomedical engineering. So pretty far away from

346
00:57:38.280 --> 00:57:44.640
Daniel: Mapping technologies, then through interest and happenstance, I ended up working in the telematics space where of course primarily

347
00:57:45.270 --> 00:57:56.640
Daniel: Almost all of our data is geospatial based and been kind of on a rapid learning curve getting up to speed on this map things so it can bring a perspective from someone who's not ingrained in the field from the outset.

348
00:57:58.890 --> 00:58:08.670
Ted Guild: Thank you, Thomas Lee from MapBox is currently the Policy Lead there and parse that he was leading the engineering search team.

349
00:58:11.070 --> 00:58:18.240
Ted Guild: His work includes extensive use of Open Geospatial technologies and standards as well as engagement with projects and communities like open addresses and OpenStreetMap.

350
00:58:19.770 --> 00:58:21.930
Ted Guild: Tom, can you please tell us a bit more about yourself.

351
00:58:23.010 --> 00:58:33.690
Tom Lee: Yeah, of course. Thank Ted.. It's a real pleasure to be here. So yeah, as you mentioned, I've done a bunch of things at MapBox yesterday was my six year anniversary here actually include everything from leading the

352
00:58:34.770 --> 00:58:45.630
Tom Lee: engineering team that works on our search engine to product work on the map side to being had a policy last couple of years just focused on interaction, standards bodies, and government

353
00:58:46.800 --> 00:58:56.430
Tom Lee: Before this, I was CTO at the Sunlight Foundation which was a transparency org, nonprofit in the US that focus heavily on advocacy for open data, which is kind of the path that led me here. So,

354
00:58:57.240 --> 00:59:02.970
Tom Lee: It's been a thrill to learn what the geospatial world is like and how it connects to the larger world of open knowledge.

355
00:59:06.000 --> 00:59:07.050
Ted Guild: So as I mentioned,

356
00:59:09.090 --> 00:59:15.570
Ted Guild: I'll keep an eye on the chat window if there's questions from the audience. I feel there's time we'll take them now, unless I save them towards the end.

357
00:59:16.680 --> 00:59:17.310
Ted Guild: We have

358
00:59:18.510 --> 00:59:36.420
Ted Guild: Our esteemed panelists have a mix of experiences, backgrounds. Some cases veterans and geospatial area and others, including myself,  new to this area and are, I believe, Daniel has much more experience in geospatial than, than I do.

359
00:59:37.890 --> 00:59:45.810
Ted Guild: And what I like to see is what lessons we have learned and future of mapping on the web and

360
00:59:47.550 --> 00:59:51.090
Ted Guild: Including for fresh perspectives, you know, in case of people are new, this

361
00:59:53.280 --> 00:59:58.350
Ted Guild: Tell us a few things that are you feel are worth sharing about where you see mapping now, or you think

362
00:59:59.400 --> 01:00:01.950
Ted Guild: Things we can learn from historically, where you like to go

363
01:00:03.960 --> 01:00:04.470
Ted Guild: Since

364
01:00:06.750 --> 01:00:20.370
Ted Guild: no particular order. If someone feels like jumping in, feel free. Otherwise, I'll just call on someone sort of a ad hoc kind of thing. And as I said, feel free to sort of feed off eachother,  you know, interchange and interact with each other as we go.

365
01:00:22.020 --> 01:00:23.640
Tom Lee: I'd be happy to jump in if folks don't mind.

366
01:00:26.550 --> 01:00:37.260
Tom Lee: I apologize. Everyone else here. I had put together a slide deck, because I totally screwed up trying to connect before this, I've got this whole thing loaded in my head. I just got to get it out, but I will be brief.

367
01:00:37.980 --> 01:00:44.100
Tom Lee: So there are three things that I wanted to try and convey to this audience in the hopes that can inform the work is being done by the group.

368
01:00:44.790 --> 01:00:53.250
Tom Lee: The first, I think, is that there's there's reason for better sense of optimism about interoperability in the mapping world than I've seen in some of the materials presented so far.

369
01:00:54.630 --> 01:01:05.310
Tom Lee: I have some blinders on here because I'm really proud of the work that MapBox has done in the open on these questions, but I do want to underscore the fact that there are is a universe of open standards, either like admirably open

370
01:01:05.790 --> 01:01:15.570
Tom Lee: Gone through standards bodies or just de facto ones like shape file that are sort of the PDF or Word docs of the universe that everyone can read, but isn't exactly happy about.

371
01:01:16.260 --> 01:01:27.420
Tom Lee: You know, my colleagues Jon Gillies got Geo JSON through the ITF process, the official standard.  The MapBox vector tile spec is used by lots of organizations, including OpenLayers like Andreas just presented

372
01:01:28.230 --> 01:01:43.440
Tom Lee: It's an open spec and available to all. And in general, I think that there is like, a bit less of lock in and has been reported here, I would encourage people to check out the awesome vector tiles repo on GitHub, which lists a ton of different open projects and

373
01:01:44.700 --> 01:01:47.250
Tom Lee: vendors that are using the, the standard.

374
01:01:48.270 --> 01:01:52.170
Tom Lee: The second thing I want to focus on is just like trying to underscore the fact that

375
01:01:52.800 --> 01:02:01.440
Tom Lee: Maps and tiles in particular, and the technology behind the classic preprocessing versus runtime trade off and people need to bear that in mind as we're considering technologies.

376
01:02:02.130 --> 01:02:08.820
Tom Lee: To address this problem of use cases. There's a baseline of basically 60 frames per second cross platform performance.

377
01:02:09.570 --> 01:02:16.260
Tom Lee: As well as bandwidth efficiency that have to be met if any work coming out of just going to be relevant, and that has to be cross platform. I'm afraid we

378
01:02:16.860 --> 01:02:20.220
Tom Lee: restrict ourselves to web browsers on desktop usually. I'm like,

379
01:02:20.730 --> 01:02:28.980
Tom Lee: Raster tiles are at one end of this where you can do a lot of pre computation but lose kind of flexibility. Vector tiles are at the other end and their various points along the spectrum.

380
01:02:29.370 --> 01:02:34.170
Tom Lee: Where you can make different choices. The industry is that vector tiles now and I would strongly suggest folks.

381
01:02:34.800 --> 01:02:41.850
Tom Lee: You know the raster tiles are still an essential part of the picture, if we're talking about imagery base layers are some types of pre processing, but

382
01:02:42.600 --> 01:02:54.540
Tom Lee: They're not where the action is right now and really vector tiles and particular, rendering on GPU is where the industry is and where work needs to be done to push things forward.

383
01:02:55.140 --> 01:03:02.250
Tom Lee: And then the final point I'll make is that I think there's a real important need for 'batteries included' approach to any proposal that comes out.

384
01:03:03.810 --> 01:03:06.510
Tom Lee: Web oh sorry, Geo Data is data big

385
01:03:08.010 --> 01:03:14.040
Tom Lee: Our MapBox street tile set, which is a small sort of highway use case oriented tile set

386
01:03:14.850 --> 01:03:23.190
Tom Lee: It's like comparable to what you would want in your, your, you know, Google Maps application, is at least 400 gigabytes with with train data closer to 800

387
01:03:24.120 --> 01:03:31.410
Tom Lee: And our satellite imagery layer is measured in petabytes, this is not stuff that's going to ship with a Firefox download, thoughts need to be given to

388
01:03:32.010 --> 01:03:38.070
Tom Lee: How users who want the ease of the HTML authoring experience and deserve it, are going to get that

389
01:03:38.610 --> 01:03:42.270
Tom Lee: There is a need for some level of centralization, for instance authoritativeness

390
01:03:42.750 --> 01:03:59.610
Tom Lee: For dealing with licensing across geo data. And in general, I think, to make this map like compelling, it's got to get beyond throwing a simple vector data set that fits in a GeoJSON file into a browser. It's unfortunately pretty far from where meaningful use cases are

391
01:04:04.230 --> 01:04:07.800
Ted Guild: Some more that, unpack some more than a little bit more later on.

392
01:04:10.440 --> 01:04:11.070
Ted Guild: Ed, Johannes,

393
01:04:12.480 --> 01:04:14.880
Ted Guild: Daniel. Anyone else want to jump in on this one?

394
01:04:16.200 --> 01:04:21.300
Ed Parsons (Google): And I don't disagree with anything from that said there is, I think, from interoperability point of view.

395
01:04:23.040 --> 01:04:30.240
Ed Parsons (Google): There are there are enough bandwidth to make sure that the the very kind of building blocks that we need to sort of build solutions now and into the

396
01:04:30.780 --> 01:04:37.350
Ed Parsons (Google): medium term future are mostly there with work to do, but I think sometimes we need to sort of step back and say, well,

397
01:04:38.340 --> 01:04:51.240
Ed Parsons (Google): Actually, what are we trying to do, you know what is a map fundamentally is is a communication tool for displaying a particular message, communicating something that is relevant to us.

398
01:04:52.170 --> 01:04:57.840
Ed Parsons (Google): And that's going to change on a minute by minute, second by second basis, depending on the message we're trying to communicate.

399
01:04:58.410 --> 01:05:12.870
Ed Parsons (Google): That in itself is only a small part of the broader geospatial industry and, you know, many cases the solutions in geospatial processing might be a yes, no decision, it might be a cell that you put into a spreadsheet.

400
01:05:13.890 --> 01:05:24.810
Ed Parsons (Google): If anything, we've we've learned over the last 20 years is that geospatial industry is very diverse indeed you know the the presentations, we've seen over the last week or so

401
01:05:25.500 --> 01:05:36.600
Ed Parsons (Google): In this workshop. We're seeing huge diversity of different applications people are trying to do. So I guess my initial point is around focus, I think, to make

402
01:05:37.080 --> 01:05:54.720
Ed Parsons (Google): Geospatial information on the web in the browser, a better citizen, we might need to focus quite finally on a limited number of use cases, where we get the maximum benefit because there's a huge breadth of things that you probably don't want to standardize at this point in time.

403
01:05:55.800 --> 01:06:00.210
Ed Parsons (Google): But there were some core things perhaps around, you know, simple static map display.

404
01:06:01.230 --> 01:06:13.320
Ed Parsons (Google): That would give us initial early benefit and will allow us to move forward and there's just such a diversity here. I think that that that focus that product management approach is really important.

405
01:06:17.310 --> 01:06:17.670
Ted Guild: Thank you.

406
01:06:20.010 --> 01:06:21.060
Ted Guild: Daniel or Johannes

407
01:06:23.730 --> 01:06:28.320
Daniel: Yeah. Again, I can't really disagree with anything that's already been said here anymore, the things that's

408
01:06:28.770 --> 01:06:35.370
Daniel: Tom Lee mentioned, it was a lot more being done and exciting things and just kind of like throwing GeoJSON but that is a lot of what I actually do in my

409
01:06:35.850 --> 01:06:39.690
Daniel: Day to day work but like how many smarter, better ways to integrate

410
01:06:40.290 --> 01:06:45.870
Daniel: That kind of data with the actual vector map tiles for our customers is something that like I definitely want going forward. And there are cases where

411
01:06:46.200 --> 01:06:52.080
Daniel: We need smarter ways to be able to do that because even sometimes we're able to show, for example, the map representation of our

412
01:06:52.290 --> 01:07:03.330
Daniel: Customers data in an anonymized way, but we can't actually share the data itself and there's no easy way to do that, just overlaying GeoJSON on a map. So having better integrated ways and to dynamically generate that and such is

413
01:07:03.810 --> 01:07:13.890
Daniel: Something that I would be excited about going forward, for sure. And then, yeah. Again, I can't disagree with anything, that is as well about the dynamic nature of the space, that different array of products and applications.

414
01:07:16.350 --> 01:07:16.650
Ted Guild: Thank you, Johannes.

415
01:07:17.970 --> 01:07:32.160
Johannes Lauer: Yeah, thank you. So I'm I'm completely aligned with all the speakers see, and around, and I think it's a super heterogeneous space where we are currently moving through so

416
01:07:33.120 --> 01:07:50.850
Johannes Lauer: I think it's just the peak of the ice cube that we scratched, with mainly visualizations and some small things of mapping when you look backwards. So the whole thing about cartography, which has been made over

417
01:07:52.680 --> 01:08:06.720
Johannes Lauer: decades and centuries, more or less. You see how you combine the maps and now with the maps for the web. It is changing. It's getting more dynamically, but you need all this

418
01:08:07.590 --> 01:08:17.760
Johannes Lauer: Visualizations to represent the informations to have a better decision making process, make it faster. And besides that you're getting

419
01:08:18.210 --> 01:08:27.360
Johannes Lauer: A super heterogeneous set of data, which is coming in that you need to process within a very short time and present this to

420
01:08:28.050 --> 01:08:40.290
Johannes Lauer: The decision makers at the end. And I think there will be an evolution, which will be, yeah probably faster than it was within the last year, and the

421
01:08:40.980 --> 01:08:53.880
Johannes Lauer: Request for standardized inputs and and yeah very yeah maybe agnostic way of working with with data and different data sets to represent this data to

422
01:08:55.650 --> 01:09:15.480
Johannes Lauer: Be had. A whole heterogeneous set of decision makers from politicians to engineers to researchers and so on, and also for software engineers to handle the data. I think it's, it's quite broad. And we definitely need a broad set of tools for that.

423
01:09:18.840 --> 01:09:20.310
Ted Guild: So, thank you.

424
01:09:22.230 --> 01:09:22.620
Ted Guild: Something that

425
01:09:24.390 --> 01:09:30.720
Ted Guild: you sort of touched upon was sort of the openness of data. Silos exist from commercial interests, including your own,

426
01:09:31.920 --> 01:09:36.600
Ted Guild: Because costs are considerable you want us to protect those assets and quite a few of you,

427
01:09:39.480 --> 01:09:45.750
Ted Guild: Are, your companies are finding ways to opening them up in various ways and forms, not just the customers but for other purposes.

428
01:09:46.680 --> 01:09:57.990
Ted Guild: We also sort of often hear of silos existing within organizations as well, where different departments only know how to open up and share data with each other. People take a very narrow specific

429
01:09:58.980 --> 01:10:07.140
Ted Guild: Focus on a given problem and don't think about how to architect and engineer data for for future openness and interoperability

430
01:10:08.700 --> 01:10:12.390
Ted Guild: So like to sort of hear some of your experiences

431
01:10:13.440 --> 01:10:18.210
Ted Guild: In that and part of it is also where the benefits of open data.

432
01:10:19.350 --> 01:10:19.890
Ted Guild: I know that

433
01:10:23.340 --> 01:10:34.110
Ted Guild: There's been several cases where people, some of the panelists companies here have been extremely helpful in helping various disasters.

434
01:10:35.250 --> 01:10:48.510
Ted Guild: As far as looking data in real time, making available for emergency responders and governments and where it's just sort of realized the impact and sort of really sort of target their focuses

435
01:10:49.980 --> 01:10:56.370
Ted Guild: As far as this will probably expect to see more of, with climate change and all the various wild fires we're seeing increased so

436
01:10:57.390 --> 01:10:59.250
Ted Guild: There's a lot of information that

437
01:11:00.270 --> 01:11:04.830
Ted Guild: Is being collected that can be harnessed and leveraging shared and very useful and meaningful way.

438
01:11:06.000 --> 01:11:06.840
Ted Guild: So just

439
01:11:08.040 --> 01:11:09.510
Ted Guild: In general, maybe a bit about

440
01:11:10.650 --> 01:11:12.660
Ted Guild: experiences with silos, opening up,

441
01:11:13.950 --> 01:11:24.870
Ted Guild: The benefits for opening up, including my the sort of mentioning as far as basically helping helping our fellow citizens of this planet, a little bit about your experiences and thoughts.

442
01:11:26.670 --> 01:11:37.230
Ted Guild: Since Johannes the pleasure of going last, I'm calling on him first. But let's let people sort of jump in. I don't know if he's squirming too much, but your camera is still on in front of me. So

443
01:11:37.950 --> 01:11:40.350
Johannes Lauer: All right. Yeah, we can start with it.

444
01:11:40.800 --> 01:11:57.240
Johannes Lauer: And it would start with, and quite famous sentence which you probably all know, so the whole thing is more than the sum of its parts. So when I think that's the motivation, so that the sentences from Aristotle this. It's quite famous

445
01:11:58.410 --> 01:12:10.020
Johannes Lauer: And if you're having in mind all this research project, for example, within the European Union, you have, for example, this horizon 2020 programs.

446
01:12:10.530 --> 01:12:34.620
Johannes Lauer: They are companies, research institutes, NGOs, governmental institutions and so on are getting partly funded to do some projects together, which is partly research focus, more innovation focus, but also for building new ways of

447
01:12:36.510 --> 01:12:39.960
Johannes Lauer: Getting money, building new businesses and so on.

448
01:12:42.420 --> 01:12:44.940
Johannes Lauer: So when you see how companies are working so

449
01:12:46.380 --> 01:13:03.120
Johannes Lauer: Not having the whole thing of a solution for potential customers, but also being in one boat within with several competitors and trying to find a solution. I think

450
01:13:03.720 --> 01:13:16.980
Johannes Lauer: The cake of the geospatial stuff is increasing and it will be increasing for the next years or even decades, because we are still in exploring the things

451
01:13:18.240 --> 01:13:36.840
Johannes Lauer: So I think we, together, you will probably get more than you will get alone within your own business and it will widen the scope and with this, interoperability is for sure one one key part, and also within our

452
01:13:38.760 --> 01:14:01.620
Johannes Lauer: Our panelists here. So there. Yeah, at least two other competitors of HERE in this panel is where we have like the same fields of businesses but I definitely think that every competitor has its, its own yeah focus, and specialties that we can bring into

453
01:14:02.670 --> 01:14:08.790
Johannes Lauer: Yeah, solve customer needs at the end. And I think this is something that needs to be explored.

454
01:14:12.930 --> 01:14:13.500
Ted Guild: Daniel? Thomas?

455
01:14:15.180 --> 01:14:15.540
Ted Guild: Any of you?

456
01:14:16.680 --> 01:14:18.300
Daniel: Yeah, I can jump in there.

457
01:14:19.620 --> 01:14:32.160
Daniel: I mean yeah interoperability is kind of like a key thing going through all of this. Of course, I mean, you, you mentioned a couple of things, when you were talking there, Ted. Also, I was told my mic is quiet. So someone yell at me if it's still too quiet. I'm just trying to get closer to it here.

458
01:14:33.270 --> 01:14:43.320
Daniel: One of the things you mentioned was going to like social good and that kind of thing. Like, that's something that we tried to do a lot, we actually have a portal where we release a whole bunch of just open source data sets. And then there's a few reasons for that.

459
01:14:43.560 --> 01:14:50.640
Daniel: It's not entirely selfless, one is like, it's an interesting kind of like business draw, but also, we find that like putting data out kind of builds up

460
01:14:51.300 --> 01:14:58.740
Daniel: A couple things. One is just like partnerships and ideas of like, better ways to use our data and interesting things that we can do. Part of it is also just like

461
01:14:59.130 --> 01:15:07.170
Daniel: As you mentioned, there's disaster. So our devices. The plug into vehicles. They have an onboard gyroscopes accelerometers, so you know when tremor start happening we're able to measure that.

462
01:15:07.500 --> 01:15:09.780
Daniel: From from earthquakes and vehicles and when the

463
01:15:10.140 --> 01:15:17.100
Daniel: Mexico one happened I think was last year, the year before we able to detect that and the aftershocks and stuff and pinpoint areas that were that were hit harder and

464
01:15:17.310 --> 01:15:24.120
Daniel: Likewise with hurricanes and stuff. And we release all of that and the ability for decision makers to quickly go in and get access to that kind of data.

465
01:15:24.750 --> 01:15:30.630
Daniel: Present it, make decisions based on it. So that's come up a couple times in presentations like ultimately the point of this stuff is

466
01:15:30.840 --> 01:15:41.400
Daniel: The human is looking at it and wants to do something actionable, make a decision, go somewhere decide on some policy change something, so having the ability to quickly iterate on that and productize things is really important.

467
01:15:41.760 --> 01:15:48.330
Daniel: And then another thing that was brought up was was siloing so that definitely happens even within GeoTab here. We've got a lot of different departments.

468
01:15:48.750 --> 01:15:59.670
Daniel: Some of which are newer, older there's legacy systems. There's a lot of interoperability things over the last few years, we've migrated most of our services internally on to the Google Cloud Platform. And actually, last year,

469
01:16:00.330 --> 01:16:07.080
Daniel: BQGIS came out. So we use Big Query as our data warehousing environment and they added native geospatial support into Big Query.

470
01:16:07.320 --> 01:16:11.910
Daniel: So I've been told and departments at different ways of kind of storing and and managing the geospatial information.

471
01:16:12.240 --> 01:16:18.450
Daniel: In different ways of trying to visualize that and play with it but just the fact of just baking in that standard into the tool that everybody uses

472
01:16:18.720 --> 01:16:23.580
Daniel: Now, like, by default, if your geospatial data is in Big Query. I know it's in the right format because it's natively supported

473
01:16:23.820 --> 01:16:33.960
Daniel: And that made it a lot easier to just communicate and save share data across the departments that we have here. So baking these standards and immediately starts to break down the silos, at least in my experience.

474
01:16:35.850 --> 01:16:36.180
Ted Guild: Thank you.

475
01:16:38.220 --> 01:16:47.190
Tom Lee: Yeah, so I, I, one of the things that attracted me to MapBox is the kind of humanitarian work folks have talked back here, the OpenStreetMap team does amazing work activating

476
01:16:47.550 --> 01:16:54.300
Tom Lee: In the wake of disasters and we've been, we've been privileged to help to arrange donations that imagery from partners like Maxar,

477
01:16:54.900 --> 01:17:02.340
Tom Lee: Formerly Digital Globe, but, you know, in some ways that's like, that's an outlier. I think that there is a more predictable process by which data gets open

478
01:17:02.550 --> 01:17:12.000
Tom Lee: When I was running the search team at MapBox. Our coin of the realm was addressed data points. That's what we really need to provide accurate geo codes for end users for a lot of important use cases.

479
01:17:12.480 --> 01:17:19.380
Tom Lee: And, you know, of course, the first thing we do is go around individual governments and see if they have them available on their Open Data Portal is really interesting to learn

480
01:17:19.800 --> 01:17:22.050
Tom Lee: Sort of where the dividing line and density was

481
01:17:22.980 --> 01:17:30.210
Tom Lee: You know, highly populous and economically successful areas typically have these points available for download or you get them easily enough

482
01:17:30.510 --> 01:17:38.460
Tom Lee: And then more remote places that were focused on extractive industries, oil, and gas timber, stuff like that. You'd have to send in a check and then they burn you a DVD-ROM or whatever.

483
01:17:39.360 --> 01:17:49.380
Tom Lee: Or they just didn't have the data at all. And, you know, this makes sense if you think about just in terms of infrastructure, if you are trying to build a road into remote wilderness to service the property, you pay somebody to do it.

484
01:17:50.100 --> 01:17:54.600
Tom Lee: But it's a socialized cost downtown to maintain the roads because it doesn't make sense to

485
01:17:55.230 --> 01:18:02.220
Tom Lee: You know, send everybody a bill individually except as part of their taxes. It's a piece of infrastructure, everyone can use and people, you know,

486
01:18:02.730 --> 01:18:06.240
Tom Lee: If I better understanding of the same holds true for geospatial data, which is great.

487
01:18:06.930 --> 01:18:11.310
Tom Lee: It means that we can expect the open offerings around the world to keep getting better and better.

488
01:18:11.640 --> 01:18:18.690
Tom Lee: And partly, that's the work of governments and partly it's the work of dedicated volunteers. I just dropped a link in chat to the OpenStreetMap statistics page.

489
01:18:19.470 --> 01:18:24.510
Tom Lee: And you'll see like, you know, there's millions of nodes getting added every single day to this project.

490
01:18:25.050 --> 01:18:36.810
Tom Lee: Now there are other challenges with it one familiar to anybody who follows Wikipedia,in terms culture ostracizing and the welcoming this new contributors and there's also questions about new types of data.

491
01:18:37.590 --> 01:18:48.210
Tom Lee: You know, the classic use case of tracing roads and buildings from satellite imagery is something that anybody can do from their armchair at any point in the world. It's harder to map turn restrictions.

492
01:18:48.930 --> 01:18:52.740
Tom Lee: Or other more subtle types of data that require additional data sets aren't available in the open.

493
01:18:53.520 --> 01:19:02.160
Tom Lee: Or what are frankly just really tedious require a lot of technical knowledge to do. I think there's also open questions about different types of mapping that are being done that rely on

494
01:19:02.520 --> 01:19:10.080
Tom Lee: GPS sensor traces. There is a capability to upload that go with them, but the large scale collection of stuff to do things like detect real time traffic conditions.

495
01:19:11.190 --> 01:19:18.330
Tom Lee: Nobody's yet figured out how to do this safely and totally open way because there's really important privacy considerations and economies of scale that you have to

496
01:19:18.570 --> 01:19:24.510
Tom Lee: Cross that mean that commercial entities or governmental ones are really the ones that are in the best position to solve these problems. So

497
01:19:25.500 --> 01:19:35.850
Tom Lee: There are some real challenges related to sort of the next frontier for spatial data, how are we going to get the street level imagery on an open basis refreshed frequently enough to be relevant. How are we going to get a truly navigable

498
01:19:37.470 --> 01:19:48.720
Tom Lee: fully open road graph, but, you know, in general, the trend toward open. This has been great. And I think it's really super powered, a lot of the industry and businesses with people on this call.

499
01:19:53.100 --> 01:20:07.740
Ed Parsons (Google): Yeah. Again, it's hard to sort of disagree, although I think there probably are if we honest limits that openness, I think, by all means. So the direction of travel is towards greater that was an openness, because it reduces friction that allows us to

500
01:20:08.280 --> 01:20:15.960
Ed Parsons (Google): Interoperate, allows us to break those silos down. And when we choose to share data, it makes sharing more valuable.

501
01:20:17.010 --> 01:20:23.070
Ed Parsons (Google): But I think we also have to recognize that there you know there are business models around adding value to data sets to,

502
01:20:25.020 --> 01:20:37.650
Ed Parsons (Google): creating processes algorithms that use data to produce another product in other service and we need to recognize that they will coexist. And I sort of

503
01:20:38.610 --> 01:20:49.230
Ed Parsons (Google): I suppose example I use. I had a call earlier on today with some people in the UK who are building an open data portal for buses, national bus routes and so

504
01:20:50.070 --> 01:21:09.720
Ed Parsons (Google): Many, many years ago, a few years ago and GTFS was created as a open standards for people that wanted to publish bus and public transit information is now used across the industry by many vendors. It's a mechanism by which if you choose to make data available.

505
01:21:10.740 --> 01:21:20.340
Ed Parsons (Google): It's a way that you can do that in a standardized fashion and it allows an ecosystem to then develop around that where app developers can build their apps that you know if you are passenger

506
01:21:21.090 --> 01:21:29.130
Ed Parsons (Google): If you get information about how well your bus is running. If you're a provider of services to the bus operator, you can build them an app that

507
01:21:29.430 --> 01:21:36.900
Ed Parsons (Google): That consumes in danger and ads you know their own management information as well. So it's those examples where you can identify

508
01:21:37.230 --> 01:21:43.320
Ed Parsons (Google): Here's a case where everyone wants to get access to very similar data can we put in place a mechanism that

509
01:21:43.800 --> 01:21:55.800
Ed Parsons (Google): meets the needs of 80% of that community and then allows those ecosystems to develop around that now allows you know some companies, if they wish to to to be commercial and make money out of the process.

510
01:21:58.470 --> 01:21:59.790
Ted Guild: I wanted to touch on a few things that

511
01:22:00.930 --> 01:22:03.870
Ted Guild: For this topic that a sort of come across

512
01:22:05.910 --> 01:22:08.820
Ted Guild: Certainly for both internally and

513
01:22:10.920 --> 01:22:16.950
Ted Guild: For exposing dates others in the importance of standards is one thing I heard, trying to settle on some core ontologies

514
01:22:18.000 --> 01:22:29.400
Ted Guild: Or data models. There's the government entities were mentioned, there are some the richest producers of open data sets, for sure. There's also quite a bit of

515
01:22:31.200 --> 01:22:32.640
Ted Guild: researchers that have taken a

516
01:22:34.110 --> 01:22:38.340
Ted Guild: Tax dollars, you know, public funds, but have otherwise sort of encumbered their results.

517
01:22:40.170 --> 01:22:49.710
Ted Guild: For various reasons. And as we sort of mentioned there's even though lot of commercial providers are are exposing some of their data, there's some things that they're keeping closed

518
01:22:51.060 --> 01:22:52.830
Ted Guild: For temselves, but it seems like

519
01:22:54.600 --> 01:22:55.590
Ted Guild: There needs to be

520
01:22:57.060 --> 01:23:10.680
Ted Guild: Some way to have sort of open understanding of what data is available out there, even if it's under restricted terms, and it may be sort of multiple licensing capabilities for research purposes if you

521
01:23:11.730 --> 01:23:17.610
Ted Guild: Are using this data set and what you have to do as far as giving back, for like a like a

522
01:23:18.990 --> 01:23:22.830
Ted Guild: Like Apache Software license kind of thing, or what have you, or

523
01:23:23.880 --> 01:23:33.660
Ted Guild: No commercial interest you know where you're doing the value add, you'd be making money off of this data, what you should be giving back know if if you're getting commercial data source. Are there

524
01:23:34.800 --> 01:23:37.440
Ted Guild: Are there sort of things along these lines that can can maybe

525
01:23:38.850 --> 01:23:44.340
Ted Guild: Help us to sort of figure out how to make people aware of what's available in trying to

526
01:23:47.190 --> 01:23:53.970
Ted Guild: normalize the concept of catalogs and exchanges. There are some various efforts. I know

527
01:23:56.700 --> 01:24:05.190
Ted Guild: National Research Council of Canada is doing a big project and that where they're trying to build huge catalogs, data lakes is their kind

528
01:24:06.450 --> 01:24:20.310
Ted Guild: Of private and public sector data and not sure how much that is being used and mirrored and model for elsewhere, but if people have knowledge of things like that or ideas on

529
01:24:21.870 --> 01:24:26.610
Ted Guild: What we can try to do better there in order to, people can find data.

530
01:24:28.110 --> 01:24:38.790
Ted Guild: Proactively instead of, you know, when there's a crisis or when there's a business need or generate revenue streams, additional revenue streams for your companies these sort of things.

531
01:24:39.780 --> 01:24:49.890
Ed Parsons (Google): I think I'm a bit of a radical in this position, and now I'm no great fan of data catalogs and for the traditional approach that we've taken as a geospatial industry for

532
01:24:50.700 --> 01:25:07.170
Ed Parsons (Google): separating out the content and the metadata, we've had the meta data catalogs, we've gone down the route of creating quite sophisticated and schemas for describing geospatial content which he would go to a specialized server

533
01:25:08.430 --> 01:25:15.840
Ed Parsons (Google): Come up with the query language to negotiate with that. So that, and you might identify that some data sets exists somewhere.

534
01:25:17.010 --> 01:25:29.640
Ed Parsons (Google): But as a result of that, like a result of that, in many ways, artificial separation between content and the metadata about that content. It's been hard to access information that is useful and this is actionable.

535
01:25:30.210 --> 01:25:37.890
Ed Parsons (Google): Unfortunately, I think, you know, things are changing. You see, you see things like the stack and you see

536
01:25:38.910 --> 01:25:42.840
Ed Parsons (Google): The direct process, the direct publishing of raster data sets.

537
01:25:44.730 --> 01:25:53.850
Ed Parsons (Google): In a much more accessible form where you actually are tying the meta data to the actual data itself and with a traditional search paradigm to try and

538
01:25:54.330 --> 01:26:07.560
Ed Parsons (Google): Query across those data sets and to pass them in that way. It's making geospatial information more mainstream, more like any other data set that was published on on the web. And now, indeed, we're beginning to have those initial

539
01:26:08.550 --> 01:26:18.390
Ed Parsons (Google): forays into a Linked Dataor approach to geospatial information, coming up with better semantics to understand how we published geospatial data. I think

540
01:26:18.900 --> 01:26:34.170
Ed Parsons (Google): Where we need to do to move forward again you know is I guess that was my message is, we need to be more mainstream. We need to be much more standard citizens of the web as opposed to creating our own separate Geospatial web where we did things differently.

541
01:26:40.620 --> 01:26:41.280
Johannes Lauer: Yes

542
01:26:43.980 --> 01:26:44.340
Johannes Lauer: May I step in.

543
01:26:45.150 --> 01:26:45.570
Ted Guild: This is

544
01:26:46.980 --> 01:26:56.880
Johannes Lauer: I think the one thing is making the information available and kind of searchable. The other thing is to make it digestible and

545
01:26:57.450 --> 01:27:20.340
Johannes Lauer: Make it easy to evaluate this information for for consumers, for users of the data. So you need to figure out, okay, is this data usable is, does it have and fitness for my use case is the for example the road network that is available by governmental institution or by

546
01:27:21.990 --> 01:27:35.700
Johannes Lauer: MapBox or by HERE, by OpenStreetMap itself by Google, or whatever, who is the supplier is this fitting to my use case and having this in an kind of standardized way and

547
01:27:36.630 --> 01:27:59.100
Johannes Lauer: Making it easy for the consumer to evaluate the data. I think in many use cases even consumers do not know about the requirements for the use case. And there is in in many things not standard way to evaluate the quality of spatial data.

548
01:28:01.500 --> 01:28:03.600
Daniel: Yeah, yeah. And just have

549
01:28:03.660 --> 01:28:05.370
Tom Lee: Sorry, go ahead Daniel.

550
01:28:05.730 --> 01:28:12.840
Daniel: And yeah, just having the data available is like, just very simple and first step and that I mean like Statistics Canada. And like other thing other websites in the US and

551
01:28:13.380 --> 01:28:22.740
Daniel: Abroad have lots of data kind of these little data lakes that they've just sort of dumped their from historical uses because they've gotten the mandate to do that, but not all of it is high quality, not all of it is useful.

552
01:28:22.890 --> 01:28:26.220
Daniel: Most of it is not accessible with an API or any simple method. So like

553
01:28:26.550 --> 01:28:32.280
Daniel: I've got a team of interns running around trying to scrape like open data from all these open data portals and then spend weeks, getting it into our

554
01:28:32.520 --> 01:28:41.880
Daniel: Environment and then visualize it and then see half of it is useless. Like there's no easy way to get all that or to understand its utility after, until like a lot of work has been put into it.

555
01:28:44.100 --> 01:28:45.090
Tom Lee: Yeah, I think.

556
01:28:46.620 --> 01:28:53.670
Tom Lee: This is one of the reasons why I get very excited about some of the ideas around distributed tiles that had been discussed in earlier presentations.

557
01:28:53.970 --> 01:29:07.020
Tom Lee: But it's hard for me to see it working. What do you suggest trying to, I think, for me, occasionally run into right where we can see a customer maybe wants to render MapBox tiles and route against HERE tiles and that can lead to really weird behaviors.

558
01:29:08.220 --> 01:29:16.050
Tom Lee: Even just using OSM by itself, you kind of need to know which version canonical you're pulling down, you've got to have workflows to watch for vandalism.

559
01:29:17.280 --> 01:29:22.140
Tom Lee: And, you know, other ways of correcting bugs, since it is a widely used database.

560
01:29:23.400 --> 01:29:32.010
Tom Lee: One other thing I'll say, I'm sorry that I will always go back to address points by example, but probably should all just resign yourself to that for he next 30 minutes

561
01:29:33.450 --> 01:29:43.260
Tom Lee: Is the OpenAddresses project. So there are a ton of governments in the publishing address point data, a lot of them have decided to invent their own data licenses, which is not super helpful to be perfectly honest.

562
01:29:44.010 --> 01:29:48.690
Tom Lee: Others are aiming for compatibility OpenStreetMaps open database license, which is

563
01:29:49.470 --> 01:29:55.740
Tom Lee: Great, because they are doing it so it can get into OSM. In practice they're political, cultural legal obstacles to

564
01:29:56.100 --> 01:30:02.340
Tom Lee: Simply import there. Imagining ODBL not really used by anybody else, has known flaws and has never been tested in court.

565
01:30:02.760 --> 01:30:13.380
Tom Lee: So that situation is not great, and you wind up with then standards bodies writing these gigantic hundreds of pages long XML documents about address specs that nobody uses

566
01:30:13.740 --> 01:30:21.120
Tom Lee: And instead, their efforts like OpenAddresses this again. I'm biased here, you know, a few volunteers going out, finding the URLs of the dataset.

567
01:30:21.780 --> 01:30:25.530
Tom Lee: Writing simple little JSON snippets would say, Okay, this is what they called

568
01:30:26.280 --> 01:30:30.150
Tom Lee: The latitude column, this is what they called the longitude column, this is the projection it seems to be in

569
01:30:30.390 --> 01:30:37.560
Tom Lee: This is whether it requires attribution, whether it's share-alike or whether none of that is required and you're still going to have your own lawyer to go through all this stuff, but

570
01:30:38.220 --> 01:30:46.470
Tom Lee: The output of our system is a big CSV that you can import and you don't have to do this for every county in the US for, you know, every department in France.

571
01:30:47.880 --> 01:30:52.020
Tom Lee: And that's, like, that's the reality of what you actually have to do to use this data, putting it up on to

572
01:30:52.770 --> 01:31:00.930
Tom Lee: Government website with a bunch of metadata is one thing, and you can pat yourself on the back for a job well done. But for any user who's use case extends beyond your borders.

573
01:31:01.350 --> 01:31:07.200
Tom Lee: I think that more attention to operability would be really welcome and would deliver a lot of value to your citizen users.

574
01:31:09.150 --> 01:31:17.370
Ted Guild: So the geospatial or spatial data in the web is your scripts we reach our dream. They're taking up overhauling the

575
01:31:18.540 --> 01:31:23.580
Ted Guild: Especially the web best practices document, and this may be an opportunity to,

576
01:31:26.070 --> 01:31:33.900
Ted Guild: Without something that is not, not, you know, a confusing standard that noone adopts and does involve the various stakeholders and no one finds out about it

577
01:31:34.590 --> 01:31:40.980
Ted Guild: And won't get there. Hopefully there's ways that we can try to improve where it is and prove create some baselines.

578
01:31:41.400 --> 01:31:54.090
Ted Guild: Maybe an opportunity so that work is is kicking off right now, so that's an opportunity and focusing a lot on on data and sort of apologies, I guess for that, this is maps in the workshop. This is the content that's going in, in behind it.

579
01:31:54.630 --> 01:32:02.160
Ted Guild: And, you know, extremely sort of valuable, necessary, is, it is, there is a wealth of information out there, but it's

580
01:32:03.660 --> 01:32:07.170
Ted Guild: Hearing and heard in the past how unusableit is, and a lot of cases.

581
01:32:09.030 --> 01:32:20.400
Ted Guild: And greed know, to the extent that you can keep things simple. So because you have to keep in mind the multitude of audiences producing this information. If you can sort of boil it down to something

582
01:32:21.540 --> 01:32:26.970
Ted Guild: You know, kind of treading even here CSV in this day and age, but you know it is it is a

583
01:32:28.080 --> 01:32:37.320
Ted Guild: Is a common denominator, is something that people can produce and readily and you don't have to submit, as you every government entities, you know,

584
01:32:38.040 --> 01:32:53.010
Ted Guild: Told to open up this data in some format and their eyes will get crossed trying to figure out  how. If we can find if we can give them some some basic guidance, some ways to do that, that would be a huge help. And then hopefully be able to increase it from there.

585
01:32:54.150 --> 01:32:54.930
Ted Guild: We have a question.

586
01:32:56.640 --> 01:33:00.990
Ted Guild: From Karel about OGC user feedback.

587
01:33:02.130 --> 01:33:08.550
Ted Guild: So the spatial on the web group is a part of that. So I guess I preempted  your question with the partial response.

588
01:33:09.720 --> 01:33:14.820
Ted Guild: As far as what the OGC community itself is doing. But as far as the

589
01:33:16.050 --> 01:33:18.570
Ted Guild: OGC/W3C joint committee which is spatial on the web group.

590
01:33:19.620 --> 01:33:34.110
Ted Guild: But other other people either panelists wor in the audience that can maybe speak a little bit to that as far as what sort of feedback you're hearing on on on geospatial data in general and sorta openness.

591
01:33:34.650 --> 01:33:44.250
Ed Parsons (Google): Well, I mean, I can speak from an OGC point of view, being a director, at least on the board of directors for OGC. So as you see that there's a big is a big change for the OGC in the past,

592
01:33:44.700 --> 01:33:52.980
Ed Parsons (Google): I'd say two years probably, where there is now a focus of becoming much more developer friendly in terms of building

593
01:33:54.360 --> 01:34:04.530
Ed Parsons (Google): APIs that are again more standardized using Swagger, OpenAPI as a design principle and making sure that you know much more of the

594
01:34:04.950 --> 01:34:10.710
Ed Parsons (Google): Activity happens in the open so you see much more work now happening in GitHub, and

595
01:34:11.670 --> 01:34:21.480
Ed Parsons (Google): It allows you a hopefully a more more open process. And, you know, there are still challenges there as you see traditionally has been dominated by large government agencies.

596
01:34:21.900 --> 01:34:31.620
Ed Parsons (Google): I think we, OGC as an organization needs to work hard to sort of broaden it its appeal to that that wider community of users of geospatial data.

597
01:34:32.100 --> 01:34:46.230
Ed Parsons (Google): As opposed to producers, that's, I guess where the the balance needs to shift a bit, but I would hope the most people on this call see OGC now as a, as a more open organization, then it was perhaps in the past.

598
01:34:50.670 --> 01:35:01.140
Ted Guild: W3C went through similar transition while ago. And so, you know, this is always a balancing act and both organization are similar in their revenue models, you know, being membership.

599
01:35:01.440 --> 01:35:03.510
Ed Parsons (Google): I think it is it is a recognition that it's

600
01:35:03.600 --> 01:35:10.440
Ed Parsons (Google): It's more than the technology. It's about bringing communities together you know Tom made a really good point about, you know, openness.

601
01:35:10.740 --> 01:35:16.200
Ed Parsons (Google): And around the complexity of licenses and I think there's still a lot of work that we need to do to come up with

602
01:35:16.680 --> 01:35:23.370
Ed Parsons (Google): You know, a robust form of data licensing that parallels what we do with with software development, you know, we know

603
01:35:23.910 --> 01:35:35.790
Ed Parsons (Google): What an Apache License is, we know what a GPL licenses. We don't have the same level of granularity when it comes to how we process and we publish data. So I think there's still more work to be done there,

604
01:35:36.870 --> 01:35:41.280
Ted Guild: Most likely the question Creative Commons licenses, maybe more.

605
01:35:42.780 --> 01:35:45.600
Ted Guild: Palpable offhand, but I'm not a lawyer, thankfully.

606
01:35:47.280 --> 01:35:47.910
Ted Guild: Anyone else

607
01:35:49.440 --> 01:35:52.230
Ted Guild: Have sort of thoughts on on this this particular

608
01:35:53.460 --> 01:35:56.880
Ted Guild: question or topic at present.

609
01:35:56.880 --> 01:36:04.560
Johannes Lauer: Yeah, I think this is a super important point. So, and it's definitely comparable to the things that you do have in the software industry.

610
01:36:05.010 --> 01:36:15.990
Johannes Lauer: And you need to figure out when when you shipping software to a customer, you need to have an license compliance, so in many software products, there's like,

611
01:36:16.470 --> 01:36:24.240
Johannes Lauer: 80% of the software is open source. And you have the whole bunch of software licenses. And the same would

612
01:36:25.110 --> 01:36:35.670
Johannes Lauer: Be the case for geographic data sets and it would be even more complicated and having a look at all the open database or open data license models that you have,

613
01:36:36.270 --> 01:36:45.180
Johannes Lauer: At least here for Germany and for all over Europe. I think in Germany every Federal State has its own open data license for the

614
01:36:46.560 --> 01:36:53.220
Johannes Lauer: data sets that are given by their governmental institutions by each municipality and so on that,

615
01:36:54.330 --> 01:37:11.100
Johannes Lauer: Yeah, super mess of licenses and data. And if you want to make use of that and harmonize this this data for an end to end routing, let's say, across Europe or across all over the world that is getting super complicated

616
01:37:12.240 --> 01:37:33.360
Johannes Lauer: And you need to have an homogeneous handling of this licenses, of the data formats and so on. And if you then implement on top and as an in between layer. For example, a routing engine or search engine. You need to digest this data, you need to take care on the

617
01:37:34.380 --> 01:37:45.720
Johannes Lauer: Different license model and this is, at the end, this is the business that HERE is doing for roughly 35 years, by providing this for automotives.

618
01:37:46.890 --> 01:37:48.180
Johannes Lauer: In such a case.

619
01:37:51.060 --> 01:37:53.340
Ted Guild: Chris Little provided a another answer.

620
01:37:54.870 --> 01:37:57.840
Ted Guild: To this question saying that, uh,

621
01:37:58.860 --> 01:38:04.830
Ted Guild: Maybe she's talking about the OGC Center for user feedback and provide the link which will be

622
01:38:05.970 --> 01:38:11.880
Ted Guild: I will make sure it's part of the Minutes proceedings and it's currently in, zoom chat. Thank you, Chris.

623
01:38:14.670 --> 01:38:16.650
Ted Guild: So, looking at the clock and

624
01:38:18.960 --> 01:38:22.470
Ted Guild: We still plenty of time. But try and get back to

625
01:38:25.110 --> 01:38:29.700
Ted Guild: GIS data is going to drive out to the web, is providing the content and

626
01:38:30.840 --> 01:38:33.330
Ted Guild: But what are some business use cases that

627
01:38:34.530 --> 01:38:40.770
Ted Guild: Pertain to your companies as far as what you'd like to see this, this effort this mapping community address that will help

628
01:38:42.000 --> 01:38:52.110
Ted Guild: Help you become stakeholders in this activity help you help driveand shape that help with sort of considerations would you like to try and get

629
01:38:53.160 --> 01:39:08.310
Ted Guild: Them to think, think of up front. What are some of the cost benefits for you instead of having to, if you can use the web browser as your, your interface your end customers, does that reduce your costs, you know, if you're leveraging the more the web stack instead of

630
01:39:09.480 --> 01:39:11.550
Ted Guild: Doing proprietary interfaces, for example.

631
01:39:12.720 --> 01:39:23.190
Ted Guild: What sort of, we've had quite a bit of presentations and panels on accessibility enhancements, which is extremely important part of maps on the web. How do you make

632
01:39:24.810 --> 01:39:25.860
Ted Guild: How do you currently make

633
01:39:27.030 --> 01:39:31.260
Ted Guild: Your mapping solutions accessible or try to

634
01:39:33.180 --> 01:39:44.190
Ted Guild: See that the the importance of open standards for a harmonized approach for helping increase the accessibility of mapping on on the web. So what are some like

635
01:39:48.450 --> 01:39:52.710
Ted Guild: Business cases or or things that you think may influence this

636
01:39:54.000 --> 01:40:04.050
Ted Guild: This effort, this activity, in ways that you can maybe bring it back within your companies and help make the argument for why they should be involved, kind of thing.

637
01:40:07.890 --> 01:40:17.850
Tom Lee: Well for us, unlocking performance is really important. There's always more that we would like to do to enable more flexibility on the client side and we're really bounded by what's possible.

638
01:40:18.660 --> 01:40:24.840
Tom Lee: And this gets down to the nitty gritty of browser implementation. So this is less standards work than just getting the implementations right.

639
01:40:25.620 --> 01:40:35.100
Tom Lee: This was alluded to, in Andreas's presentation on OpenLayers and some of the constraints they're facing using Offscreen Canvases. I've run into, you know, varying

640
01:40:35.610 --> 01:40:41.700
Tom Lee: differences in how the performance Resource Timing API is implemented web workers across browsers which interfered with some of our benchmarking.

641
01:40:42.450 --> 01:40:46.860
Tom Lee: That's like, that's pretty deep. I would say it's hard to find very many tickets about this stuff being broken

642
01:40:47.550 --> 01:40:53.430
Tom Lee: But that's really important. Moving to a native implementation could really unlock some additional performance.

643
01:40:54.330 --> 01:40:59.010
Tom Lee: But it's going to have to be at the leading edge and in turn that performance is going to open up

644
01:40:59.340 --> 01:41:04.830
Tom Lee: new capabilities for doing stuff on the client. Like, I think I spoke too dismissively of the idea of throwing GeoJSON at,

645
01:41:05.250 --> 01:41:11.730
Tom Lee: On top of the map. That is like an incredibly flexible and powerful use case, and if your data is small enough to do it that way.

646
01:41:12.330 --> 01:41:23.010
Tom Lee: You can do more with the data in that form, then basically anything else. The problem is that it's not performant when you start adding too much. And so you have to do pre processing in the tiles, or other optimizations, you have to

647
01:41:23.700 --> 01:41:32.910
Tom Lee: You know, rather than relying on the lovely vector drawing API as it exists in the browser, you have to try and each line and triangles in Web GL right now.

648
01:41:34.050 --> 01:41:40.650
Tom Lee: Anything that can be done to unlock more performance will push the frontier forward and if standardization can be part of that, then that's really great.

649
01:41:43.200 --> 01:41:44.460
Ted Guild: Anyone else want to speak on that one.

650
01:41:45.000 --> 01:41:45.690
Ed Parsons (Google): Yeah.

651
01:41:46.200 --> 01:41:53.040
Daniel: Percent like a lot of a lot of this stuff there go really close my microphone for me in the chat. So he getting complaints, um,

652
01:41:53.430 --> 01:42:02.550
Daniel: Yeah, a lot of this stuff that we're doing now, we're like, we're coming up with workarounds around performance constraints, likes there's stuff that we could be doing with we have petabytes of

653
01:42:02.910 --> 01:42:11.130
Daniel: Movement data from vehicles, like there's a ton of stuff we are doing and could do with that, but there's only so much stuff that we can put on a map with like, you know, GeoJSON rendering on top of

654
01:42:11.400 --> 01:42:19.800
Daniel: Raster tiles, as soon as we get to like a couple of million points using like current implementations. It just grinds to a halt, especially because most of the renderings happening on the user side.

655
01:42:20.040 --> 01:42:23.400
Daniel: And there's only so much their computers can do, especially when we're working with public sector

656
01:42:23.790 --> 01:42:31.410
Daniel: Community. So that's really a limiting factor. And then, I mean, you mentioned the accessibility. So I actually just had a call this morning. We've got a mandate internally and make sure

657
01:42:31.650 --> 01:42:37.620
Daniel: Every single one of our products is align with the AODA, which is the Ontario, where I live, province for

658
01:42:38.340 --> 01:42:41.160
Daniel: Disability stuff. There's the ADA stuff, etc. Kind of

659
01:42:41.580 --> 01:42:54.000
Daniel: How do we do that with with all of the novel, like mapping representations that we're coming up with, smart cities is not an easy thing. It's not something that's really standardized right now. So that's going to be a challenge for us, for sure.

660
01:42:54.270 --> 01:43:02.550
Daniel: And then the other thing is just kind of coming back to interoperability. We're working with a lot of cities that got different data, different legacy systems, different ways that they want to look at things and

661
01:43:02.820 --> 01:43:08.490
Daniel: If I've generated data sets, for example, with OpenStreetMap and they want to see it kind of projected onto Google Maps and somebody else wants to see it

662
01:43:08.940 --> 01:43:15.540
Daniel: Routed with HERE or something. There's like a lot of different interoperability considerations, even in just visualizing this that I currently struggle with.

663
01:43:18.720 --> 01:43:27.300
Ed Parsons (Google): I look at it from a different perspective. You know, I look at web pages as a source of data and you know let's take for example.

664
01:43:29.070 --> 01:43:39.990
Ed Parsons (Google): A location of a business or hotel or shopping center, you see web page or which there may be a map presented on it but almost certainly, there will be textual description

665
01:43:40.410 --> 01:43:50.220
Ed Parsons (Google): Of the address. Maybe the opening hours when I became of is you know better semantic tagging of that content on the page so that your

666
01:43:50.790 --> 01:43:56.220
Ed Parsons (Google): Screen reader can read the address that they have the semantic understanding that in this case

667
01:43:56.640 --> 01:44:16.110
Ed Parsons (Google): This particular store is in Ottawa, which is in Ontario, which is in Canada, then you can you ask, have a dialogue with an intelligent assistant that understood that content as geospatial information, understood the geo spatial relationships that were presented there, and could almost do that

668
01:44:17.280 --> 01:44:24.720
Ed Parsons (Google): without reference to the map because the map, by its very nature is a very visual representation. If we can

669
01:44:25.200 --> 01:44:32.370
Ed Parsons (Google): Have that same content expressed in other ways mean the geospatial ideas behind that information also presented,

670
01:44:32.820 --> 01:44:44.010
Ed Parsons (Google): I think that's going to give as many other opportunities in the future, not just from an accessibility point of view, but from, you know, the machine to machine processing of this data moving forward.

671
01:44:49.620 --> 01:44:51.030
Ted Guild: Johannes, have anything on this one or?

672
01:44:52.230 --> 01:44:53.220
Ted Guild: No pressure

673
01:44:57.600 --> 01:44:58.950
Johannes Lauer: Yes, fully true

674
01:45:02.280 --> 01:45:04.470
Johannes Lauer: I agree with that. Yeah.

675
01:45:06.060 --> 01:45:18.480
Johannes Lauer: I think, maybe, maybe one point. So, as we talked a little bit about business models or what could accelerate this behavior and also just saw Jonathan

676
01:45:20.100 --> 01:45:29.370
Johannes Lauer: Put some some data into the chat of this massive database about licenses and license models which are available of this

677
01:45:30.090 --> 01:45:38.340
Johannes Lauer: Somehow open accessible data sets via mainly via OGC interfaces, but also by ESRI proprietary interfaces.

678
01:45:39.330 --> 01:46:02.640
Johannes Lauer: And I think this is definitely something where we need some some work on to clarify how this data can be used. We do have on consumer side safety on use this data and building business models, maybe out of that and having as a consumer and the producer.

679
01:46:03.870 --> 01:46:12.300
Johannes Lauer: The opportunity to yeah, to make money out of data and building businesses on top of that.

680
01:46:13.020 --> 01:46:24.450
Johannes Lauer: If the provider of the data is not able to provide an exact license of the product which is yeah being yeah open for public

681
01:46:25.440 --> 01:46:47.670
Johannes Lauer: Then it's it's very unsecure to build a business case on top of that, because you don't know how the decision would be, and this is a layer which is needed to bring some safety into the market and this will also start thinking about the quality of data and figuring out what kind of

682
01:46:48.930 --> 01:47:04.470
Johannes Lauer: Attributes and variables are are needed to specify to describe the data, which would go probably beyond the meter data description which is currently available.

683
01:47:11.820 --> 01:47:12.330
Ted Guild: Sorry.

684
01:47:13.890 --> 01:47:21.570
Ted Guild: To not, I'm using my iPad for zoom and getting some, way too many dings, apologies for that. I hope they're not coming through.

685
01:47:23.190 --> 01:47:24.030
Ted Guild: They probably are.

686
01:47:25.170 --> 01:47:25.590
Ted Guild: So,

687
01:47:27.750 --> 01:47:34.980
Ted Guild: A big, revenue and regulations are the two of the biggest motivations for for commercial interests.

688
01:47:36.300 --> 01:47:40.530
Ted Guild: Daniel mentioned ADA and the Canadian equivalent

689
01:47:42.120 --> 01:47:46.980
Ted Guild: And of course these similar things exist in EU and other parts of world and

690
01:47:49.770 --> 01:47:57.750
Ted Guild: Just to sort of drive home the point that I feel about, and clearly a lot of our participants do

691
01:47:58.740 --> 01:48:05.010
Ted Guild: You know, it's part of this workshop, it's a sort of reminder not to, you know, not directed at the panelists, but to all attendees.

692
01:48:05.790 --> 01:48:24.210
Ted Guild: That towards the day, it's not just protecting yourself from lawsuits for creating products that are not accessible as required by law. It's also keeping in mind, a good portion of your audience, your customer base. I had stats from a previous

693
01:48:26.040 --> 01:48:30.990
Ted Guild: Conversation I did with someone from the Web Accessibility Initiative about how pronounced

694
01:48:32.970 --> 01:48:45.780
Ted Guild: portion of the population has varying accessibility needs. So you're, just a reminder that you're sort of carry out a big piece of your, your customer demographic if you're not doing this at the outset, you're not thinking about it.

695
01:48:47.850 --> 01:49:02.550
Ted Guild: Response to the licensing as far as business use cases. So we're talking, sort of combines the earlier topic, as far as data and trying to be able to license it. You know people, you know, using an open web stack and making this so that

696
01:49:04.440 --> 01:49:09.510
Ted Guild: Maps for that maps to the web are first class citizen, then you can sort of tailor your products

697
01:49:10.140 --> 01:49:21.300
Ted Guild: To be cheaper later and available and more platforms more readily and without having sort of port your, your custom interface because you know there'll be a browser runtime there.

698
01:49:22.080 --> 01:49:33.600
Ted Guild: But it's also allowing opportunities to license, not just the data, some various services on top of it that does the value add, to other people who will be able to

699
01:49:34.830 --> 01:49:42.420
Ted Guild: To take your products to next step further or to specific target audiences. It's not just accessible,

700
01:49:43.650 --> 01:49:45.810
Ted Guild: Not just for accessibility means

701
01:49:47.550 --> 01:49:48.390
Ted Guild: So, uh,

702
01:49:52.530 --> 01:49:56.310
Ted Guild: What are some current technical challenges that you see that

703
01:49:57.960 --> 01:50:00.570
Ted Guild: It's kind of worse with the business use cases of it,

704
01:50:01.950 --> 01:50:02.550
Ted Guild: but any sort of,

705
01:50:04.200 --> 01:50:06.360
Ted Guild: Technology challenges that you like to

706
01:50:07.380 --> 01:50:18.000
Ted Guild: We've, we've actually heard several throughout this. So I guess this is sort of an opportunity to express the additional ones that you like to try and get out there and

707
01:50:18.840 --> 01:50:27.960
Ted Guild: Get in people's ears and minds as they're working on maps for the web. What are some some things that you like to some challenges you face that you feel that

708
01:50:29.010 --> 01:50:36.000
Ted Guild: This community will, as well as they try to make maps more prominent on the web, right, the

709
01:50:36.060 --> 01:50:47.790
Tom Lee: Let me jump in Ted because you mentioned accessibility. I just talked briefly say this is one of the reasons why I think it's really important for people to engage with vector tiles as the technology, because they carry semantic content, not just

710
01:50:48.480 --> 01:50:56.640
Tom Lee: Rendered visual content where the raster tiles do. They can be inspected on the client side. And you can do all kinds of things that make the map experience dramatically more accessible.

711
01:50:57.120 --> 01:51:07.410
Tom Lee: Just couple weeks ago I saw somebody dissertation cross my inbox, an iOS app with extremely high contrast mode and tactile feedback to make the

712
01:51:08.010 --> 01:51:18.180
Tom Lee: Make the map vibrate when your finger crossing the road line for people with visual impairments and that's possible, you know, using the exact same vector tiles, you might use to power a conventional display.

713
01:51:18.630 --> 01:51:27.870
Tom Lee: So that's one of the things to make that technology really exciting. Still faces constraints though, this is one of those things that I, you know, for all the hype I do think that we're going to see some exciting things with 5G and other

714
01:51:28.410 --> 01:51:33.630
Tom Lee: Technologies deployed because, you know, right now, our rule of thumb that we enforce is 500 kilobytes per tile.

715
01:51:34.200 --> 01:51:41.790
Tom Lee: That limits how many languages, we can support for labels, labels, it limits the precision of geometry, limits to how many features we can include that at a given zoom level.

716
01:51:42.750 --> 01:51:49.200
Tom Lee: We're optimizing around this to try and balance the incredible power you can pack into one of these things using Google's protobuf technology

717
01:51:50.400 --> 01:51:57.480
Tom Lee: binary representation with a good experience over mobile networks and you know that's gonna that's gonna keep getting better. I don't know that it's

718
01:51:58.080 --> 01:52:06.840
Tom Lee: I don't know everybody who's on the zoom and if any of them are responsible for the state of our wireless networks, but if you are, keep up the good work. I think we're going to get better map thanks to your efforts.

719
01:52:10.560 --> 01:52:11.400
Ted Guild: Thoughts from others?

720
01:52:13.980 --> 01:52:23.310
Ed Parsons (Google): I guess my wishlist, if there is such a thing is is a better positioning technology we produce quite good solutions now that work outside with a clear view of the sky

721
01:52:24.060 --> 01:52:40.200
Ed Parsons (Google): But we spend the, at the moment, we spend an awful lot of time indoors, where most of that technology stops working as well. And we can't really do very well the transition between indoors and outdoors and particularly again from that accessibility point of view if you're dealing with people with

722
01:52:41.370 --> 01:52:51.930
Ed Parsons (Google): limited vision, having accurate turn by turn directions delivered by, by voice both outside, inside require us to be able to position ourselves down to

723
01:52:52.410 --> 01:52:59.520
Ed Parsons (Google): Less than the meter, all of the time and there is no real technological solution for doing that at scale at this point in time.

724
01:53:00.300 --> 01:53:11.910
Ed Parsons (Google): There's work in progress. I think in the next five years, we will come up with those solutions, but if we can solve that problem now, that that opens up a huge range of new applications that

725
01:53:12.600 --> 01:53:27.450
Ed Parsons (Google): They will regard the indoors as as as a geospatial realm, just as the same way to regroup regard the outside as a geospatial realm. I think it's a change of scale, that we're operating at that. I think that's going to be really, really exciting near future.

726
01:53:30.450 --> 01:53:33.390
Ted Guild: So I haven't been there a while, I work at the status center.

727
01:53:34.800 --> 01:53:39.150
Ted Guild: MIT, actually we got bumped to another building, but, um, it's a Frank Gehry building. There's not a lot of

728
01:53:40.290 --> 01:53:47.640
Ted Guild: Straight lines in that place and they've tried with various NFC and other things to try and help people navigate, there's

729
01:53:49.110 --> 01:53:54.540
Ted Guild: per accessbility laws they're spread all over the place, as well. But it's such that

730
01:53:55.950 --> 01:54:11.850
Ted Guild: Indoors is normally a challenge. And there's ways to make even more so. There's a couple of community groups at W3C we heard from the linked data for accessibility folks before. There's also the linked building data group that's looking to

731
01:54:14.130 --> 01:54:25.770
Ted Guild: They're actually more focused on building capabilities and what it sort of has to offer. Then the internal and navigation, but the linked data for accessibility folks are trying to

732
01:54:27.840 --> 01:54:34.500
Ted Guild: Include data as far as what how to move within the building. What itss capabilities are, offerings, things like that.

733
01:54:42.690 --> 01:54:45.180
Ted Guild: So what are a, we only have few minutes left.

734
01:54:48.510 --> 01:54:52.140
Ted Guild: Give the audience, some opportunity to throw in some more questions.

735
01:54:54.090 --> 01:54:57.840
Ted Guild: For us to sort of wrap up and, but in the meantime, like

736
01:54:59.370 --> 01:55:03.330
Ted Guild: What are some new opportunities, some offerings that you see that

737
01:55:04.560 --> 01:55:12.930
Ted Guild: improved maps on the web can bring. We personally sort of come up sort of already, but those were the last of my topics on the list. So

738
01:55:15.330 --> 01:55:16.290
Ted Guild: Any sort of

739
01:55:17.580 --> 01:55:25.500
Ted Guild: What do you see this this activity, possibly opening up as far as smart cities, more sort of interoperability.

740
01:55:27.150 --> 01:55:29.130
Ted Guild: multimodal transportation coordination.

741
01:55:30.450 --> 01:55:31.830
Ted Guild: For when we can travel again.

742
01:55:35.640 --> 01:55:41.580
Ted Guild: Various things like that, you know, anything sort of come to mind that sort of, you think might be sort of

743
01:55:42.690 --> 01:55:47.580
Ted Guild: Among the various killer apps that'll help sort of drive this the space or,

744
01:55:49.110 --> 01:55:59.940
Ted Guild: Ah, shouldn't use killer apps. Where's the big sort of bigger picture initiatives that can can really sort of benefit from this that that might come to mind.

745
01:56:06.300 --> 01:56:08.610
Ted Guild: Go on, sorry.

746
01:56:08.730 --> 01:56:12.060
Tom Lee: I guess I would take it from the, from the other side, right, is that I think

747
01:56:13.170 --> 01:56:31.170
Tom Lee: They are simple use cases, it should be simpler, and you don't necessarily have to bite off augmented reality or, you know, some of the stuff into the bleeding edge right, like the there are a lot of people who want to do some simple thematic mapping or heat maps or, you know, or

748
01:56:32.340 --> 01:56:42.360
Tom Lee: Corn plants like, things that it would be really nice if you don't understand the difference between like the natural data set. And, you know,

749
01:56:43.200 --> 01:56:51.060
Tom Lee: What OpenLayers versus Leaflet is to get up and running in your web browser stuff that you know the spammy W3Schools links should cover.

750
01:56:51.450 --> 01:57:00.180
Tom Lee: I think it would be great if we could clear that bar and make the basic and generally openly licensed ADM 0 and ADM 1 geometry

751
01:57:00.720 --> 01:57:12.090
Tom Lee: Ship with browsers and ideally have like wiki data links so that people can tie into a semantic universe associated data and just make like the simple stuff simple. That'll be really cool.

752
01:57:13.440 --> 01:57:16.470
Ted Guild: A quick clarification W3Schools is not related to W3C

753
01:57:17.250 --> 01:57:20.190
Ted Guild: We never sent a cease and desist way back in the 90s when they started

754
01:57:20.940 --> 01:57:21.630
Ted Guild: But anyway.

755
01:57:22.230 --> 01:57:23.070
Ted Guild: I will say,

756
01:57:24.420 --> 01:57:26.550
Ted Guild: They do some good stuff though nonetheless.

757
01:57:27.420 --> 01:57:34.770
Ed Parsons (Google): Yeah, I agree with Tom I think just getting the simple things right. What you know what appealed to me about this whole Maps4HTML

758
01:57:35.460 --> 01:57:44.730
Ed Parsons (Google): Program and the work that Peter has been doing is, is actually making it even simpler than it is now. You could argue, well over the past 10 or 15 years we've made

759
01:57:45.210 --> 01:57:57.030
Ed Parsons (Google): Maps in the web, much simpler they once were. And, you know, but actually there's still a long way to go to make it as simple as possible. And for most importantly for anyone, creating

760
01:57:57.750 --> 01:58:03.120
Ed Parsons (Google): A web site, a web application doing anything in the browser to actually understand. Okay,

761
01:58:04.050 --> 01:58:09.870
Ed Parsons (Google): That's a piece of geospatial content. I know what that does. I know how I can interact with that without

762
01:58:10.320 --> 01:58:19.800
Ed Parsons (Google): You know, necessarily building the huge JavaScript libraries that we have at the moment, if there is a core amount of functionality to allow, someone's put a map up on a web page

763
01:58:20.220 --> 01:58:27.120
Ed Parsons (Google): Have basic interactivity and put a pin on that map that makes geospatial more mainstream. That's what we should be aiming at.

764
01:58:31.530 --> 01:58:32.070
Ted Guild: Thank you..

765
01:58:33.180 --> 01:58:33.450
Ted Guild: Daniel, Johannes

766
01:58:34.560 --> 01:58:44.130
Ted Guild: going that question, should have gone with  with closing remarks kind of things as we are coming up to the top of the hour rather rapidly, but if you guys also have a brief opportunity to put something out there

767
01:58:45.960 --> 01:58:57.030
Ted Guild: and just a reminder to everyone Discourse links exists on on the agenda page in the minutes or so things as far as continuing the conversation well, after this workshop

768
01:58:58.350 --> 01:59:08.790
Ted Guild: Daniel, Johannes any sort of either. So we're closing remarks are some ways that what the future hold, and what are some opportunities which are meant to be kind of that topic as well.

769
01:59:09.390 --> 01:59:13.470
Daniel: So yeah, just, just briefly, I guess those pile into that and then that kind of feeds into your, your question.

770
01:59:13.920 --> 01:59:21.000
Daniel: Like making things simpler going forward. It's like our business model is primarily through resellers like we realized early on we can't be all things to all people.

771
01:59:21.720 --> 01:59:29.790
Daniel: Maps are really complicated and our end users can't really handle a lot of that on their own. Our value like I think is in the data and the algorithms that we apply on top of that.

772
01:59:29.940 --> 01:59:36.420
Daniel: We're not mapmakers, we leverage maps to display that information to our customers. And we have a whole team of people building interfaces for them to do that.

773
01:59:36.660 --> 01:59:44.340
Daniel: But if there were simpler ways for our resellers to just ingest the data that we're generating for them and customize it to each of their own customers and we can be a lot more hands off on that.

774
01:59:44.640 --> 01:59:54.720
Daniel: And as he's kind of standards involved to make that easier going forward. We can redouble our efforts on what our core business model is and where our expertise is and less on building up these custom interfaces for end users.

775
01:59:56.610 --> 01:59:57.630
Ted Guild: Thanks. Johannes?

776
01:59:58.290 --> 01:59:58.620
Johannes Lauer: Right.

777
02:00:00.060 --> 02:00:09.510
Johannes Lauer: So yeah, briefly, my conclusion for the future would be making the interfaces and the interaction possibilities for end user customers.

778
02:00:10.320 --> 02:00:22.200
Johannes Lauer: Is is a key thing that we, you setting the the right leverage to make it easy for users that are not in the GI science or the geospatial

779
02:00:22.530 --> 02:00:32.580
Johannes Lauer: Community to step into that and make use of this data, just make it easy, and then let them explore the world because it's getting more complicated. You, you see how

780
02:00:33.150 --> 02:00:42.120
Johannes Lauer: Drones are working with data, the IMU stuff. The whole D Odyssey stuff which is super important for having high precise navigation.

781
02:00:42.480 --> 02:00:59.670
Johannes Lauer: And having an understanding of the quality of the data and how useful it is for my use case. What do I need, what, how, how should I evaluate the data for my special use case, and the easy access to the

782
02:01:00.450 --> 02:01:09.360
Johannes Lauer: Let's say the first level, this will open the door for the broad universe of geospatial content and

783
02:01:10.530 --> 02:01:13.260
Johannes Lauer: spatial temporal content at the end.

784
02:01:14.280 --> 02:01:14.580
Ted Guild: Thank you.

785
02:01:15.870 --> 02:01:22.320
Ted Guild: Tom, Ed, any very brief last parting words of wisdom beyond, cause lik you're answering the question and

786
02:01:23.490 --> 02:01:31.980
Ted Guild: It sort of was along those lines as far as last steps and you kind of give that I can keep it simple, simple, for now, but there's any other

787
02:01:33.840 --> 02:01:35.250
Ted Guild: parting things before we wrap up.

788
02:01:37.110 --> 02:01:39.600
Ed Parsons (Google): Addomg anything complicates things, just keep it simple.

789
02:01:40.170 --> 02:01:42.300
Ted Guild: Keep it simple. This is good, good, good thing.

790
02:01:43.590 --> 02:01:43.860
Ted Guild: Tom?

791
02:01:43.890 --> 02:01:52.260
Tom Lee: Yeah my copy made me talk more than what I should have. But yeah, I think, keeping it simple is a good place to start. And I really encourage everyone to

792
02:01:52.920 --> 02:02:10.170
Tom Lee: Try and engage with the, I think that the open mapping community has not done as good of a job as it could have making clear how this stuff works to other web communities with important exception. I mean, I was delighted to see Ivan here to see a

793
02:02:11.220 --> 02:02:21.030
Tom Lee: Andreas here, that I know there's there's important amount of overlap but there's also like a lot of work that this effort could be taking advantage of what's out there. And yeah, I'm excited to see what the proposal goes.

794
02:02:22.680 --> 02:02:25.230
Ted Guild: Thank you all for the panel, for your participation.

795
02:02:26.820 --> 02:02:35.520
Ted Guild: Apologies, might stop looking at the clock group because it was, you know, whether we're going around right out of time, we've gone too far by a couple minutes.

796
02:02:35.670 --> 02:02:36.120
Ted Guild: Peter,

797
02:02:36.240 --> 02:02:42.030
Ted Guild: You want to be to hand back over to you and see if there's any reminders you want to make before we wrap up.

798
02:02:43.380 --> 02:02:55.740
Peter Rushforth: No, but I just want to thank the panel for being such good sports and participating today. It's great to engage the community and different mapping providers and so on, as Tom was

799
02:02:57.480 --> 02:03:04.500
Peter Rushforth: Mentioning there. We've tried our best to keep it out in the open. I mean, no we don't have a big publicity machine, but it's a community group.

800
02:03:04.980 --> 02:03:20.460
Peter Rushforth: And we are welcoming of all contributions, large and small, so yeah, how to keep it simple is not as simple as one might imagine. So definitely welcome contributions in that regard.

801
02:03:21.720 --> 02:03:39.810
Peter Rushforth: And with that, I guess we should move on to our next part of our program today, which is a breakout session that's going to be led by Karel Charvat, again, about their whiteboard application technology for collaborative mapmaking over you, Karel.

802
02:03:41.070 --> 02:03:41.790
Karel Charvat: Thank you.

803
02:03:42.930 --> 02:03:44.790
Karel Charvat: I would like ask you if you can share

804
02:03:46.410 --> 02:03:52.470
Karel Charvat: The presentation and I would like to start that I'm happy. What I heard on

805
02:03:53.790 --> 02:04:03.630
Karel Charvat: The conclusion, make the things simple as I think that this is something what we see as, very important today.

806
02:04:04.170 --> 02:04:17.850
Karel Charvat: To explain how we are trying to do things simple, maybe that we can discuss how to do a little more simple in the future, I would like to ask Runar if you can start with  some introduction

807
02:04:19.890 --> 02:04:20.490
(Stein) Runar Bergheim: I will

808
02:04:21.960 --> 02:04:23.910
(Stein) Runar Bergheim: Can you see my screen is what I'm first asking.

809
02:04:24.810 --> 02:04:29.040
(Stein) Runar Bergheim: Yes. Okay, so you can see something saying collaborative matchmaking

810
02:04:30.180 --> 02:04:38.160
(Stein) Runar Bergheim: Okay, good. So I'm going to try and make some sort of introduction to this in. Europe, of course, it is evening. I don't know how it is

811
02:04:38.640 --> 02:04:57.900
(Stein) Runar Bergheim: For how our audience distributes among different places, but I expect that during the next half an hour to hour, we're going to discuss a couple of ideas that that that we have had that we will believe, it's probably a layer above in complexity of what we've been discussing so far.

812
02:04:59.160 --> 02:04:59.880
(Stein) Runar Bergheim: Where we've been

813
02:05:01.110 --> 02:05:03.300
(Stein) Runar Bergheim: Sort of discussing the base enabling technologies that

814
02:05:04.410 --> 02:05:11.550
(Stein) Runar Bergheim: The wiring that is required to efficiently and interopably deploy base maps. We are sort of one step

815
02:05:13.470 --> 02:05:16.680
(Stein) Runar Bergheim: less sophisticated perhaps on higher higher up.

816
02:05:16.830 --> 02:05:25.320
(Stein) Runar Bergheim: In the value chain, depending on how you draw up the draw the diagram between the technology and

817
02:05:26.130 --> 02:05:42.990
(Stein) Runar Bergheim: End user, but okay. And we're going to divide the time a little bit between three different speakers, it's Raitis Berzins from from Baltic Open Solutions in Latvia. Karel Charvat, who is some sort of competence of the copy of all technology companies in Czech Republic.

818
02:05:44.730 --> 02:05:47.910
(Stein) Runar Bergheim: And myself, Runar Bergheim. I'm from a

819
02:05:49.230 --> 02:05:56.670
(Stein) Runar Bergheim: Company in Norway that didn't think that it would ever operate outside of Norway when it chose its name. So it's called Asplan.

820
02:05:57.390 --> 02:06:04.320
(Stein) Runar Bergheim: Which makes many people believe that we are some sort of assembly of proctologists, which is not a good thing. and we

821
02:06:04.920 --> 02:06:12.360
(Stein) Runar Bergheim: All belong to some sort of a siblinghood that goes by the name of the Plan4All Association, which is a spin off from a new year project back in the day.

822
02:06:13.350 --> 02:06:17.670
(Stein) Runar Bergheim: So far back in the day that it was back when people still shook hands and said hello to each other.

823
02:06:18.330 --> 02:06:32.820
(Stein) Runar Bergheim: And. And finally, it's also the intention that this should be an interactive session and most interactive sessions never turn out to be so, but we have nevertheless the discussion section on this where people should feel free to attack.

824
02:06:34.170 --> 02:06:34.590
(Stein) Runar Bergheim: And

825
02:06:36.240 --> 02:06:47.670
(Stein) Runar Bergheim: And or give voice their support to do whatever we say. Now, so I'm going to first try to put this into a little bit of context. And then we're going to demonstrate these two concepts.

826
02:06:49.320 --> 02:06:49.770
(Stein) Runar Bergheim: And

827
02:06:50.940 --> 02:07:00.630
(Stein) Runar Bergheim: So the first thing is that we were sort of encouraged by the first presentation here today, when we have this wonderful sentence

828
02:07:01.170 --> 02:07:10.800
(Stein) Runar Bergheim: "And I believe this is useful for something, but I don't know exactly what" because this is sort of the universe we come from. But when we we have had a relatively small idea.

829
02:07:12.090 --> 02:07:14.790
(Stein) Runar Bergheim: Of something that we think could be new and valuable.

830
02:07:15.330 --> 02:07:26.670
(Stein) Runar Bergheim: And we worked on this idea, not because it was scientifically smart or because the world sort of was screaming for it. And this was a need that would sort of radically change everything universe.

831
02:07:27.300 --> 02:07:38.220
(Stein) Runar Bergheim: And but once we are presenting this to the OGC which is sort of a behemoth of organizations on maps standardization and contribution to the common good.

832
02:07:38.820 --> 02:07:45.600
(Stein) Runar Bergheim: We felt the need to sort of wrap what we are saying in a quasi scientific innovation. So, like so many before us.

833
02:07:46.530 --> 02:07:51.720
(Stein) Runar Bergheim: We are going to try and retro actively fit a scientific rationale to our little idea.

834
02:07:52.260 --> 02:08:01.110
(Stein) Runar Bergheim: And had it not been for the fact that I'm telling you this, this had might have lead us to come out in a more favorable light when you when you assess us.

835
02:08:01.950 --> 02:08:16.590
(Stein) Runar Bergheim: And we are talking about collaboration, collaborative map creation and and we have become very good at collaboration, I think, I think it's fair to say over the past 20 years we have become very, very good at this.

836
02:08:18.180 --> 02:08:22.830
(Stein) Runar Bergheim: With a process that has involved many of you on various stages and

837
02:08:23.850 --> 02:08:40.860
(Stein) Runar Bergheim: I mean, you have made some, some of you who are global players have made decisions and choices in your organizations that, from your perspective, have been business decisions, but that propagated to a massive amount of value creation in small communities around Europe that you would never

838
02:08:42.120 --> 02:08:45.960
(Stein) Runar Bergheim: Imagine that even existed, like my background here, for example.

839
02:08:47.340 --> 02:08:55.500
(Stein) Runar Bergheim: And but there are a few things that are still remaining. I mean, the first barrier that was torn down was map data licensing and

840
02:08:56.520 --> 02:09:01.770
(Stein) Runar Bergheim: access to high quality maps used to be used to be one prime barrier of mapping

841
02:09:03.150 --> 02:09:14.040
(Stein) Runar Bergheim: But and and we had all these sort of mapping agencies that came out of the military tradition that thought that if people would gain access to data on public roads, it would immediately

842
02:09:14.550 --> 02:09:24.600
(Stein) Runar Bergheim: Lead to the full collapse of national security. But then, of course, Google, our friends, started to to to publish global base maps that were

843
02:09:25.920 --> 02:09:35.220
(Stein) Runar Bergheim: Better, more concurrent and and suddenly there was no sort of good political rationale for saying that we can't give you our data anymore.

844
02:09:36.000 --> 02:09:43.590
(Stein) Runar Bergheim: And the second catalyst. I think that was that has been very, very successful was the web map service, but it doesn't, of course, give you access to the data.

845
02:09:44.580 --> 02:09:54.960
(Stein) Runar Bergheim: And that limits a little bit the usefulness when it comes to many business cases, although it does greatly facilitate the base map delivery aspect.

846
02:09:56.880 --> 02:10:09.450
(Stein) Runar Bergheim: But strangely, as was mentioned there before, I mean that there are still a couple of file formats and sharing modes that are still common state in 2020 despite being equally common in 1985 well

847
02:10:09.660 --> 02:10:25.110
(Stein) Runar Bergheim: Maybe '85 but 1995 at least the shape file as has a very long life has been a difficult to kill it. And I would say that in this era of public sector information ports the .gov or list of CSV files.

848
02:10:26.340 --> 02:10:42.240
(Stein) Runar Bergheim: Although technologically not particularly interesting have been the big winner, this is, this is the format that carries the most public sector information and also a surprising amount of the geospatial information. This is point data comes in this in this guise.

849
02:10:44.070 --> 02:10:51.600
(Stein) Runar Bergheim: we've become quite good at sharing map applications and these applications come out of two camps as I see them now.

850
02:10:52.200 --> 02:11:06.210
(Stein) Runar Bergheim: There are those that lend heavily from the professional GIS software and tried to replicate somehow on the web, what ArcGIS used to be in the 1990s, and there are those that come out of the slipping map APIs like the Leaflet, OpenLayers

851
02:11:07.290 --> 02:11:21.120
(Stein) Runar Bergheim: Type of maps that that take it and what we will say, a performance approach to creating a good map experience on the web, that is not necessarily designed for people who have been working with GIS since the 80s.

852
02:11:22.590 --> 02:11:32.580
(Stein) Runar Bergheim: And however these math applications they give you this challenge that they often give you a tool, they give you a blank map which doesn't necessarily look unpleasing.

853
02:11:33.240 --> 02:11:41.310
(Stein) Runar Bergheim: And and it's very good. If you know what you want and if you know what you can expect to find there but it often challenges you to make this map yourself.

854
02:11:42.090 --> 02:11:54.480
(Stein) Runar Bergheim: And this old time map that tells a story is nowhere to be found anymore. So we are not so adept at sharing maps as we are sharing data and applications.

855
02:11:57.060 --> 02:12:07.950
(Stein) Runar Bergheim: We become quite good at creating data, our satellite missions, of course, nowadays provides so much data that we couldn't possibly do anything about it, whether we tried

856
02:12:08.700 --> 02:12:12.930
(Stein) Runar Bergheim: And why Lancet, of course, as a foreigner, I'm European, I need to show Sentinel

857
02:12:13.800 --> 02:12:22.350
(Stein) Runar Bergheim: But we have become quite good at this, we become quite good at creating data together too, I mean the OpenStreetMap is a ubiquitous base map.

858
02:12:22.710 --> 02:12:42.870
(Stein) Runar Bergheim: Map and I think particularly the efforts of the humanitarian OpenStreetMap team shows that this methodology scales. I mean, the non centralized ad hoc data capturing to support humanitarian needs on demand, this, this is something that that works very well.

859
02:12:44.310 --> 02:12:53.310
(Stein) Runar Bergheim: And this is progress. These are problems that have been solved. But once we have solved the big problems, new ones appear and they are perhaps smaller

860
02:12:54.030 --> 02:13:06.420
(Stein) Runar Bergheim: less significant petty, petty problems one might say and, but user generated content as it is today is very much a dialogue between the user and the application it works with.

861
02:13:07.380 --> 02:13:27.510
(Stein) Runar Bergheim: And this of course presumes that the user creates data is also the user who knows both technology GIS and has the knowledge about the local terrain where he works and and we believe there is some room to enhance this process as we will try to go on to demonstrate

862
02:13:28.860 --> 02:13:45.780
(Stein) Runar Bergheim: And then looking at creation of maps together and we have become good at creating data together. I don't think we have become good at creating maps together and we don't do it. And I would say that the state of cartography in the world

863
02:13:46.980 --> 02:13:57.420
(Stein) Runar Bergheim: Has shown a unanimously negative development where early maps used to be you know works of art with borders showing

864
02:13:57.960 --> 02:14:05.220
(Stein) Runar Bergheim: Fanciful pictures of the waterfall at the edge of the world and here be dragons and, you know, things that are distinctly pleasing to look at

865
02:14:05.970 --> 02:14:19.560
(Stein) Runar Bergheim: Today's cartography is very much more on the nature on on the on the left, they may be more useful. They may be put to better use, they may be part of common operating pictures in in operation centers but they are not beautiful

866
02:14:20.670 --> 02:14:25.350
(Stein) Runar Bergheim: And we think that could be a use case for collaborative mapmaking too

867
02:14:27.210 --> 02:14:34.080
(Stein) Runar Bergheim: And the reason for this is that there is five things that haven't changed as much as we could have hoped for during the last 40 years and

868
02:14:34.680 --> 02:14:45.690
(Stein) Runar Bergheim: One of them is that somewhere in some deep dark recesses of most governments GIS departments in 2020 there is still some sort of a large format plotter looming.

869
02:14:46.740 --> 02:14:55.890
(Stein) Runar Bergheim: And there is still a significant chunk of middle aged grey humans who are who are huddled around poorly ventilated meeting room tables.

870
02:14:56.760 --> 02:15:05.820
(Stein) Runar Bergheim: peering over some sort of a printout of a map appointing and stipulating and spilling coffee and cookie crumbs and whatever they do in this process.

871
02:15:06.480 --> 02:15:21.240
(Stein) Runar Bergheim: That invariably annotating these maps by markers and they're pointing the fingers a lot to explain what they mean. And finally, this is hand over to a GIS specialist who then has the very hapless and

872
02:15:21.810 --> 02:15:31.440
(Stein) Runar Bergheim: tragic fate of trying to distinguish what is the chocolate chips smudge and what is a new development area that should be adjusted in this map.

873
02:15:32.790 --> 02:15:43.770
(Stein) Runar Bergheim: And thus, maps are still edited collaboratively in 2020 so we think that is the room for some improvement there and if 2020 so there's anything

874
02:15:44.250 --> 02:15:54.990
(Stein) Runar Bergheim: Except that when it rains, it really, really pours, it is that a lot of physical meetings were are and hopefully shall remain non essential

875
02:15:55.560 --> 02:16:05.310
(Stein) Runar Bergheim: And even those of us who are most opposed to progress have been forced to find some sort of way to live with online cooperation in this year.

876
02:16:05.850 --> 02:16:22.650
(Stein) Runar Bergheim: And so we think that some sort of evolution of of sharing technology could be apt at this moment in time. And we're looking at some sort of a client to client map data creation that allows for a better experience in this way and possibly better quality.

877
02:16:24.690 --> 02:16:33.510
(Stein) Runar Bergheim: And so I think this is the question that would form yourself in your mind as you hear me drone on about this, there is a

878
02:16:34.380 --> 02:16:51.990
(Stein) Runar Bergheim: Distinctive first world flavor to the type of problems that I have listed here. This is not something that is going to solve world hunger or anything like that but it rings, a little bit of this first presentation of what 'we think this could be useful'.

879
02:16:53.130 --> 02:16:55.590
(Stein) Runar Bergheim: 'We don't know exactly how but we think it could be useful'.

880
02:16:57.450 --> 02:17:06.060
(Stein) Runar Bergheim: So we leave you to judge whether that is so or not. And we will move on to introduce the two different concepts.

881
02:17:07.980 --> 02:17:11.040
(Stein) Runar Bergheim: And the two are,

882
02:17:12.090 --> 02:17:12.630
(Stein) Runar Bergheim: And

883
02:17:14.760 --> 02:17:24.600
(Stein) Runar Bergheim: And interoperable way of describing storing and exchanging a map and, in this context, we're not talking about the map tiles or the rendering of it as such but

884
02:17:25.560 --> 02:17:34.320
(Stein) Runar Bergheim: What can you say a portable equivalent of the project files from QGIS and ArcGIS and whatnot. Something that would draw heavily on

885
02:17:35.040 --> 02:17:46.950
(Stein) Runar Bergheim: The obvious context or the that map context standards that that were created far back, but that doesn't gain a lot of enthusiasm these days, although they are in use.

886
02:17:48.720 --> 02:18:05.250
(Stein) Runar Bergheim: And the second part is a client to client some technology platform to enable client to client interactions for common JS tasks and for these two things we have given some names 'Map compositions' and 'map whiteboards'.

887
02:18:06.480 --> 02:18:24.450
(Stein) Runar Bergheim: So the first thing we're going to talk about is the map composition and that I'm going to hand over to Raitis, I will still operate a computer, I think so. I will be clicking the forward key, but I think Raitis will speak up. So you're just telling me when you want the next slide.

888
02:18:26.250 --> 02:18:27.060
Raitis B캡rzi켽코 : Okay, thank you Runar.

889
02:18:28.590 --> 02:18:30.360
Raitis B캡rzi켽코 : Can you hear me.

890
02:18:31.470 --> 02:18:33.060
(Stein) Runar Bergheim: I can hear you. Yeah.

891
02:18:33.660 --> 02:18:42.120
Raitis B캡rzi켽코 : So yeah, I'm Raitis, representing Baltic Open Solution Center, and I will tell you a little bit more about the compositions

892
02:18:43.440 --> 02:18:44.730
Raitis B캡rzi켽코 : So, next slide please.

893
02:18:46.710 --> 02:18:47.460
(Stein) Runar Bergheim: Yes.

894
02:18:50.580 --> 02:19:04.320
Raitis B캡rzi켽코 : Um, well, as Runar mentioned, map composition can be looked upon as a project files and they are kind of a canvas on which we can

895
02:19:05.400 --> 02:19:09.870
Raitis B캡rzi켽코 : Draw the feature so, add some new elements and

896
02:19:11.970 --> 02:19:23.820
Raitis B캡rzi켽코 : If they have been developed, gradually, together with the the open source components which are listed at the bottom of the slide, namely HSLayers layers,

897
02:19:24.870 --> 02:19:27.510
Raitis B캡rzi켽코 : Which is a UI extension of OpenLayers.

898
02:19:28.620 --> 02:19:29.130
Raitis B캡rzi켽코 : And

899
02:19:30.870 --> 02:19:39.210
Raitis B캡rzi켽코 : Micka metadata catalog and Layman for uploading shape files and converting them into WMS services.

900
02:19:40.920 --> 02:19:57.720
Raitis B캡rzi켽코 : But actually the origins of the map composition were very humble. We just needed a way to store the context, context of the current Web Map between reloads of the page.

901
02:19:59.400 --> 02:20:01.350
Raitis B캡rzi켽코 : So later on.

902
02:20:03.000 --> 02:20:11.790
Raitis B캡rzi켽코 : First we had some layers and then we added the possibility for the users to draw some new features on the layers. And later on

903
02:20:11.820 --> 02:20:13.650
Raitis B캡rzi켽코 : To add more layers to the map.

904
02:20:14.850 --> 02:20:17.910
Raitis B캡rzi켽코 : But when the pages were reloaded. Everything was

905
02:20:19.050 --> 02:20:28.710
Raitis B캡rzi켽코 : erased and user had to start from scratch. So we needed to save it somehow. And from this capability we have had developed it

906
02:20:29.940 --> 02:20:35.040
Raitis B캡rzi켽코 : We created a way to share this context.

907
02:20:37.860 --> 02:20:54.810
Raitis B캡rzi켽코 : So we just had to tell one parameter in the URL of this map application and the user of the GeoPortal was able to share this context between other users.

908
02:20:56.340 --> 02:21:18.270
Raitis B캡rzi켽코 : And this composition could be exported to the metadata catalog main which also can at least have different WMS services or some raster images and so on. And these kind of data layers could be then

909
02:21:19.560 --> 02:21:21.960
Raitis B캡rzi켽코 : Mixed in various configurations

910
02:21:30.780 --> 02:21:31.320
Raitis B캡rzi켽: and shared. Next slide.

911
02:21:36.180 --> 02:21:38.040
Raitis B캡rzi켽코 : The map composition format

912
02:21:39.420 --> 02:21:42.330
Raitis B캡rzi켽코 : Is very much based on the old

913
02:21:43.380 --> 02:21:55.230
Raitis B캡rzi켽코 : Web OGC Web Map Context and it's later success successor OWS context. But what we have done is to

914
02:21:56.520 --> 02:22:02.010
Raitis B캡rzi켽코 : encode the data into JSON format, so it's easier to parse in the

915
02:22:03.180 --> 02:22:08.220
Raitis B캡rzi켽코 : Web applications which we have been developing, developing in JavaScript.

916
02:22:10.020 --> 02:22:12.540
Raitis B캡rzi켽코 : So it's easier implementation.

917
02:22:13.830 --> 02:22:14.520
Raitis B캡rzi켽코 :  Next, please.

918
02:22:19.920 --> 02:22:27.600
Raitis B캡rzi켽코 : And here is an example of map composition and on the right side you can see the structure of it.

919
02:22:28.680 --> 02:22:53.790
Raitis B캡rzi켽코 : It's, it's very much resembles the OWS context but it in a in a more simplified form. So what you have here is some basic, basic attributes describing the context of the whole map or the container like description and current extent of the map and

920
02:22:54.990 --> 02:23:09.660
Raitis B캡rzi켽코 : Current selected base layer because there can be only one of them and the map projection based on upon which the application can decide whether to reproject the layer or not

921
02:23:11.490 --> 02:23:17.010
Raitis B캡rzi켽코 : And also some information about the permissions. So

922
02:23:18.240 --> 02:23:36.270
Raitis B캡rzi켽코 : The application then can decide whether to give right permission to the users, we try to mimic the Linux file system using this and then the main or the most important part of the map composition is the list of layers

923
02:23:37.500 --> 02:23:45.510
Raitis B캡rzi켽코 : Where the order of layers matters. So the first layer in the array is considered to be the bottom one.

924
02:23:46.530 --> 02:23:46.980
Raitis B캡rzi켽코 : And

925
02:23:48.750 --> 02:24:01.710
Raitis B캡rzi켽코 : Yeah, so then continues the actual list of layer definitions and it consists of basically two parts. The parameters which are sent to the server request.

926
02:24:03.150 --> 02:24:08.790
Raitis B캡rzi켽코 : Either that is WMS or WFS or different kind of

927
02:24:11.640 --> 02:24:23.670
Raitis B캡rzi켽코 : Web service and also the parameters which are used by the client side application. Currently we have implemented the map compositions

928
02:24:24.780 --> 02:24:29.790
Raitis B캡rzi켽코 : On top of OpenLayers and also some experimentation was done on Leaflet.

929
02:24:32.160 --> 02:24:37.260
Raitis B캡rzi켽코 : So these kind of client side parameters could be

930
02:24:38.370 --> 02:24:39.930
Raitis B캡rzi켽코 : Single tile attribute

931
02:24:41.430 --> 02:24:47.670
Raitis B캡rzi켽코 : Which tells the application there to request the tile as as one tile for the whole

932
02:24:49.350 --> 02:24:52.260
Raitis B캡rzi켽코 : Whole Map window or it will be

933
02:24:55.440 --> 02:24:58.500
Raitis B캡rzi켽코 : separated into different smaller tiles

934
02:24:59.520 --> 02:25:04.140
Raitis B캡rzi켽코 : And of course the visibility of the layer or transparency or opacity.

935
02:25:06.450 --> 02:25:17.580
Raitis B캡rzi켽코 : And so on. And for WMS layers, we can request the legend graphics from the web service itself, but for some static layers.

936
02:25:20.310 --> 02:25:24.600
Raitis B캡rzi켽코 : Or static images we have to also provide an array of legends.

937
02:25:27.150 --> 02:25:28.470
Raitis B캡rzi켽코 : And same four dimensions.

938
02:25:29.490 --> 02:25:45.240
Raitis B캡rzi켽코 : So at the bottom of the slide you can see the the the URL of the schema of the map composition, but that is basically only meant for validating the composition against

939
02:25:46.980 --> 02:25:50.130
Raitis B캡rzi켽코 : A schema, which could be used on HS Layers

940
02:25:52.290 --> 02:25:55.920
Raitis B캡rzi켽코 : Map library so if if some other

941
02:25:57.600 --> 02:26:00.090
Raitis B캡rzi켽코 : geoportal solution would

942
02:26:01.440 --> 02:26:12.690
Raitis B캡rzi켽코 : Use this composition format, then of course it could have different schema because it could support different kinds of layers and different parameters for them.

943
02:26:14.730 --> 02:26:15.570
Raitis B캡rzi켽코 : Next slide please.

944
02:26:19.830 --> 02:26:36.930
Raitis B캡rzi켽코 : The main attribute, which is present for all the layers apart from the URL, of course, is the class or type name of the layer. we currently support WMS, WFS

945
02:26:37.980 --> 02:26:38.340
Raitis B캡rzi켽코 : And

946
02:26:39.960 --> 02:26:44.370
Raitis B캡rzi켽코 : Vector layers. And vector layers is interesting that

947
02:26:46.470 --> 02:27:00.510
Raitis B캡rzi켽코 : The end result is a vector layer, but the data can come from different sources. For example, it can be GeoJSON file or it can be a WFS request or it can be also

948
02:27:02.430 --> 02:27:06.390
Raitis B캡rzi켽코 : Added from Sparql endpoint or KML.

949
02:27:07.590 --> 02:27:25.320
Raitis B캡rzi켽코 : And we can. We also support x, y, z players for OpenStreetMap, Bing Maps and Google Maps and ArcGIS rest layers that also supported. The last three types of layers are

950
02:27:26.910 --> 02:27:31.950
Raitis B캡rzi켽코 : Derived from the layer definitions of OpenLayers.

951
02:27:36.390 --> 02:27:37.110
Raitis B캡rzi켽코 : Next, please.

952
02:27:45.270 --> 02:27:46.440
Raitis B캡rzi켽코 : Vector layers are

953
02:27:47.580 --> 02:27:49.500
Raitis B캡rzi켽코 : Subdivided by protocol property.

954
02:27:51.270 --> 02:27:51.660
Raitis B캡rzi켽코 : But

955
02:27:54.600 --> 02:28:07.170
Raitis B캡rzi켽코 : We could support for example Sparql endpoints, and what we try to do in this example. This image was tried to load the data from Sparql endpoint

956
02:28:08.310 --> 02:28:11.100
Raitis B캡rzi켽코 : It's a five star open linked data

957
02:28:13.230 --> 02:28:17.730
Raitis B캡rzi켽코 : Format or endpoint from with also where the data

958
02:28:19.170 --> 02:28:22.680
Raitis B캡rzi켽코 : Comes described, where the data is described in the,

959
02:28:24.840 --> 02:28:32.610
Raitis B캡rzi켽코 : where the metadata data is contained in the data which comes from the Sparql endpoint itself. So it's not separated

960
02:28:33.690 --> 02:28:43.620
Raitis B캡rzi켽코 : But everything in one package and it's easy for the developers to then go deeper to explore the semantics of the data.

961
02:28:45.780 --> 02:28:51.210
Raitis B캡rzi켽코 : And it was also this topic touched in, the panel discussion before

962
02:28:54.150 --> 02:28:59.190
Raitis B캡rzi켽코 : But for vector layers. The support this single type of

963
02:29:01.770 --> 02:29:03.510
Raitis B캡rzi켽코 : Data as JSON format.

964
02:29:05.490 --> 02:29:28.680
Raitis B캡rzi켽코 : And yeah, one of counterintuitive, but quite useful capability is the store GeoJSON encoded features directly into the composition, as opposed to having a link to some external file or service. This was intended for temporary low volume data such as scratch layers

965
02:29:30.390 --> 02:29:34.110
Raitis B캡rzi켽코 : Or some layers, where the user can freely draw some features

966
02:29:35.760 --> 02:29:37.980
Raitis B캡rzi켽코 : Or take notes. For example,

967
02:29:39.390 --> 02:29:46.830
Raitis B캡rzi켽코 : But we discovered it quite useful in the map whiteboard application which we are developing

968
02:29:49.110 --> 02:30:06.090
Raitis B캡rzi켽코 : And when this scratch layer is being populated by user at some point the features could be stored or sent to some WFS service or the Layman application which, as I was mentioning before,

969
02:30:07.170 --> 02:30:08.400
Raitis B캡rzi켽코 : Which converts

970
02:30:10.080 --> 02:30:21.000
Raitis B캡rzi켽코 : Data either the shape file or GeoJSON vector data into WFS services and it serves them with geo

971
02:30:22.200 --> 02:30:22.470
Raitis B캡rzi켽코 : geo

972
02:30:23.850 --> 02:30:25.830
Raitis B캡rzi켽코 : Geoserver so

973
02:30:31.860 --> 02:30:49.110
Raitis B캡rzi켽코 : So at the end, the features can be merged from the whiteboard server into this map composition and then requested by the user using just one request, for example where this, the application.

974
02:30:50.460 --> 02:30:54.480
Raitis B캡rzi켽코 : Just gives them an idea of the composition and then

975
02:30:56.190 --> 02:31:16.920
Raitis B캡rzi켽코 : Your turn gets back that the whole composition description with the metadata, the layer definitions. They can be vectors and vector features or they can be pointers to WMS or WFS services and also the features which have been drawn using the map.

976
02:31:20.910 --> 02:31:23.310
Raitis B캡rzi켽코 : Yeah, that's all from me.

977
02:31:26.010 --> 02:31:40.110
Karel Charvat: You didn't mention one thing that through Miska and Layman, this composition can be shared also with QGIS as desktop solution and also from QGIS you are able to publish sitemap composition

978
02:31:41.130 --> 02:31:45.450
Karel Charvat: Into catalog, which could be also shared with web environment.

979
02:31:46.800 --> 02:31:50.400
Raitis B캡rzi켽코 : Yes, that's some kind of late development,

980
02:31:51.600 --> 02:32:17.910
Raitis B캡rzi켽코 : recent development, we have been developing QGIS plugin for creating this vector layers and complete map compositions actually can be created in QGIS, and then export it to the Layman and converted into lists of layers, WMS layers very easily and published

981
02:32:20.670 --> 02:32:23.580
Raitis B캡rzi켽코 : But it's still under development so

982
02:32:24.630 --> 02:32:25.590
Raitis B캡rzi켽코 : But going well.

983
02:32:26.730 --> 02:32:35.220
Raitis B캡rzi켽코 : If anybody's interested. It's available on GitHub. If you search Layman or HSlayers for that matter.

984
02:32:41.610 --> 02:32:42.060
(Stein) Runar Bergheim: Okay.

985
02:32:43.320 --> 02:32:52.620
(Stein) Runar Bergheim: So then we might move on to say something about this map whiteboard which we've been referring to a lot now, but which we haven't actually told you what it is.

986
02:32:54.180 --> 02:32:57.390
(Stein) Runar Bergheim: And I can, I have very unfortunate

987
02:32:58.800 --> 02:33:11.670
(Stein) Runar Bergheim: Situation of having developed a cough, which is not a good thing nowadays. And if if nothing else, you stand at risk to be rolled in tarred and feathered by your neighbors, but I hope you will bear with me.

988
02:33:12.720 --> 02:33:24.180
(Stein) Runar Bergheim: I can also see from the camera here that I have turned purple. But I think that's more a question of lighting than really general health condition. So hopefully you shouldn't be too worried by the fact that I'm coughing

989
02:33:26.130 --> 02:33:34.350
(Stein) Runar Bergheim: And Map whiteboard as such is not a patented term if it is, it's not patented by us. It doesn't mean anything except whatever you put into the

990
02:33:35.730 --> 02:33:36.930
(Stein) Runar Bergheim: Your own associations.

991
02:33:38.130 --> 02:33:50.550
(Stein) Runar Bergheim: However, for the purpose of tonight. It is or today, I should say, to be slightly more globally inclusive, and it may be considered to be a peer to peer technology.

992
02:33:51.300 --> 02:34:01.680
(Stein) Runar Bergheim: That allows map interactions and modifications to be to be propagated from one connected with client or other connected all other websites.

993
02:34:02.160 --> 02:34:14.910
(Stein) Runar Bergheim: Why they're looking at the same map. So when someone moves the cursor. I can see it on my screen when someone draws a feature I can see on my screen, I can edit the features they've drawn. They can edit mine, we can add layers to the maps and they will show up for all of us, and so on.

994
02:34:16.620 --> 02:34:19.470
(Stein) Runar Bergheim: So I had uploaded here a now. Okay.

995
02:34:22.650 --> 02:34:25.530
(Stein) Runar Bergheim: What, why, why did we want such a thing.

996
02:34:27.450 --> 02:34:29.940
(Stein) Runar Bergheim: The first thing is that

997
02:34:31.140 --> 02:34:32.700
(Stein) Runar Bergheim: In the early days when we saw

998
02:34:34.800 --> 02:34:41.190
(Stein) Runar Bergheim: Sort of the the business cases for GIS with with moving things on screen. We were very

999
02:34:42.540 --> 02:34:49.110
(Stein) Runar Bergheim: enticed by this idea of seeing things moving, rather than just a static maps. And we saw that these fleet monitoring thing.

1000
02:34:51.480 --> 02:35:03.120
(Stein) Runar Bergheim: We had GPS transponders on trucks and taxis that allowed you to see where things were. This was very, very pleasing purely from a technical point of view, very pleasing. We don't own these taxes. We don't don't these companies. There was nothing in it for us. It was pleasing.

1001
02:35:04.830 --> 02:35:11.580
(Stein) Runar Bergheim: And so more relevant to our own lives, of course, we've been using Google Docs a lot for collaborative

1002
02:35:11.700 --> 02:35:12.990
(Stein) Runar Bergheim: Development of documents.

1003
02:35:13.080 --> 02:35:27.990
(Stein) Runar Bergheim: And that is a very closely related discipline, when it comes to certain things. And we've been writing documents and we had the pleasure of seeing, you know, working multiple parties on the same things without causing any sort of

1004
02:35:29.790 --> 02:35:30.000
(Stein) Runar Bergheim: The,

1005
02:35:31.290 --> 02:35:36.330
(Stein) Runar Bergheim: conflicts among our texts and we would like to see the same thing in Maps.

1006
02:35:37.590 --> 02:35:46.320
(Stein) Runar Bergheim: We also been working on user generated content, and we have been bothered by the fact that it's always one person or two people sitting physically together in the same room.

1007
02:35:47.160 --> 02:35:57.000
(Stein) Runar Bergheim: Working towards one client application, whereas this possibility of cooperating would require some sort of screen sharing online conferencing tool.

1008
02:35:58.470 --> 02:36:08.460
(Stein) Runar Bergheim: So we like that and it would still allow only one person at a time to to to work in the map. And so we thought you'd like to see something like that.

1009
02:36:09.450 --> 02:36:12.240
(Stein) Runar Bergheim: And then of course we have this irrational decided to see things move on the screen.

1010
02:36:12.630 --> 02:36:21.690
(Stein) Runar Bergheim: And I have tried to make a small video of this and I saw that that one wouldn't play so I will try to play it. I will try to change the different window and play it there.

1011
02:36:22.470 --> 02:36:36.060
(Stein) Runar Bergheim: And this is no bells and whistles. Nothing. Nothing particularly exciting, but just for the purpose of illustrating the concept made, two full screen map surfaces. These are rendered in opens in OpenLayers.

1012
02:36:36.960 --> 02:36:48.510
(Stein) Runar Bergheim: We have made the same client for Leaflet because it's not necessarily meant so that this needs to work in one technology or another, it should work on any any platform.

1013
02:36:48.960 --> 02:36:57.030
(Stein) Runar Bergheim: But I'm going to start playing it now and see if you are able to see anything. So the first thing is that when I move my cursor in one map,

1014
02:36:58.560 --> 02:37:07.080
(Stein) Runar Bergheim: The people connected the map can see where I am and each person is assigned that unique color. Now I will ask this question, can you see my screen still?

1015
02:37:10.110 --> 02:37:11.670
(Stein) Runar Bergheim:  Can you see the video playing?

1016
02:37:13.020 --> 02:37:13.380
(Stein) Runar Bergheim: Very good.

1017
02:37:13.470 --> 02:37:15.060
(Stein) Runar Bergheim: Because otherwise this will be

1018
02:37:15.150 --> 02:37:15.660
(Stein) Runar Bergheim:Just

1019
02:37:17.070 --> 02:37:30.180
(Stein) Runar Bergheim: Additional fog. Okay, so every cursor is assigned a different color. And when I move in what my connected client, my counterpart can see my cursor with it with a specific color so that

1020
02:37:32.190 --> 02:37:33.060
(Stein) Runar Bergheim: Essentially

1021
02:37:36.120 --> 02:37:37.470
(Stein) Runar Bergheim: Takes out the

1022
02:37:38.940 --> 02:37:40.200
(Stein) Runar Bergheim: Business Case of

1023
02:37:42.690 --> 02:37:48.420
(Stein) Runar Bergheim: Pointing with your fingers when you're standing around this map around this paper map on the table.

1024
02:37:49.890 --> 02:37:56.700
(Stein) Runar Bergheim: So then the second thing is that I can create data and immediately when I create this data they show up at all connected clients.

1025
02:37:57.510 --> 02:38:08.790
(Stein) Runar Bergheim: And I can connect, create or simple features according to the simple features specifcation, I mean, this just depends on the implementation that the transfer of data is using

1026
02:38:09.810 --> 02:38:14.670
(Stein) Runar Bergheim: GeoJSON, might be that we should go to some more compressed thing because

1027
02:38:15.990 --> 02:38:27.690
(Stein) Runar Bergheim: The volume here could easily drive up traffic but you're able to create geometries of any, any kind, and we are able to see that they show up and when I have created the geometry,

1028
02:38:28.860 --> 02:38:37.830
(Stein) Runar Bergheim: A person can go to that geometry and modify it in the other window. So we have read write access to all features that we have created collaboratively.

1029
02:38:39.630 --> 02:38:41.400
(Stein) Runar Bergheim: And and the same mechanism.

1030
02:38:42.780 --> 02:38:52.410
(Stein) Runar Bergheim: Applies for property. Property property editing, so attribute editing and also for adding another layer

1031
02:38:53.460 --> 02:39:03.960
(Stein) Runar Bergheim: To the, I don't know what's happening there, also for adding another layer to the map. So if we are sitting in this sort of a map user context in a government department and

1032
02:39:05.100 --> 02:39:22.260
(Stein) Runar Bergheim: We are we are assessing some some map. We can say that 'okay we need, we need some supporting information I can add to the WMS service from my side or or a shape file' or whatever and then immediately be visible to all other users as contextual information that can be turned on and off in the map.

1033
02:39:25.230 --> 02:39:35.430
(Stein) Runar Bergheim: And similar things and then we can we can see as data too. So we are able to both author the maps themselves and the cartography as well as the data content of the maps.

1034
02:39:36.690 --> 02:39:43.020
(Stein) Runar Bergheim: And that satisfies a number of business cases that we

1035
02:39:44.550 --> 02:39:58.800
(Stein) Runar Bergheim: Many of our customers are suffering from and that is a bigger problem for them in the era of COVID-19 than it was before. When they at least had the opportunity to meet in these very small meeting rooms of theirs.

1036
02:40:00.360 --> 02:40:03.540
(Stein) Runar Bergheim: And their technical architecture of this

1037
02:40:04.830 --> 02:40:07.620
(Stein) Runar Bergheim: Is based on

1038
02:40:09.690 --> 02:40:11.010
(Stein) Runar Bergheim: HTML5 client,

1039
02:40:12.090 --> 02:40:25.050
(Stein) Runar Bergheim: Could be could be of course desktop clients, QGIS, ArcGIS, or whatever I mean any sort of connected client or it could be rendered on on MapML for that in the future and

1040
02:40:26.430 --> 02:40:38.790
(Stein) Runar Bergheim: These could be implemented using any any library we have so far just implemented this for an OpenLayers and and Leaflet and something some branches, I should say some branches of OpenLayers

1041
02:40:40.230 --> 02:40:56.070
(Stein) Runar Bergheim: And in addition to standard OpenLayers. And then, initially we thought of just having this as a standalone editing technology that that only allowed you to edit vector geometries and in our, in a random GeoJSON layer.

1042
02:40:58.140 --> 02:41:12.180
(Stein) Runar Bergheim: But then we had in peril, this map compositions format which which has great overlaps with the old WS context and so on, which is might be questionable, but we had that one in our stack.

1043
02:41:12.810 --> 02:41:29.940
(Stein) Runar Bergheim: Because we just described, we needed it for some some projects. So we thought, okay, maybe, maybe it would be neat to be able to edit both the vector layers themselves and to edit the map. So we chose to use the map composition as the carrier

1044
02:41:30.990 --> 02:41:39.600
(Stein) Runar Bergheim: And in terms of lightness of load, because here, there's a lot of messages going back and forth between the client and the server, and then being distributed again.

1045
02:41:41.190 --> 02:41:44.880
(Stein) Runar Bergheim: We chose GeoJSON because it's fairly light,

1046
02:41:46.410 --> 02:41:48.060
(Stein) Runar Bergheim: fairly light way of encoding data,

1047
02:41:49.260 --> 02:41:51.720
(Stein) Runar Bergheim: So the server part of this,

1048
02:41:53.160 --> 02:41:53.520
(Stein) Runar Bergheim: Has

1049
02:41:54.900 --> 02:42:05.790
(Stein) Runar Bergheim: Documented API. It's written in node.js and socket.io yeah and it would typically be hosted behind some reverse proxy when it is in a production environment.

1050
02:42:07.350 --> 02:42:17.850
(Stein) Runar Bergheim: And and immediately when my cursor moves, of course, there goes a message to the whiteboard server that user so on so connected to map so on so

1051
02:42:18.300 --> 02:42:26.820
(Stein) Runar Bergheim: has moved this message is immediately propagated to every connected client and the state is synchronized on each client independently.

1052
02:42:27.810 --> 02:42:33.570
(Stein) Runar Bergheim: But of course, if a client falls out and reconnects that it's necessary also to synchronize this on the server. So we have

1053
02:42:34.050 --> 02:42:49.290
(Stein) Runar Bergheim: State management in MongoDB, that sits behind this. So, whenever we make any sort of map update is immediately flush to MongoDB. So there is a completely updated version of the GeoJSON and all of the map composition sitting on the server at any time.

1054
02:42:50.550 --> 02:42:55.170
(Stein) Runar Bergheim: So if you if you connect and disconnect and come back. Nothing is lost, it remains.

1055
02:42:57.180 --> 02:43:16.500
(Stein) Runar Bergheim: And there is of course a few issues here also, because if you want to have. I mean, this is a far less demanding technology that is what is it, it's not basic infrastructure like what what the early presentations here described this is sort of an edge feature and application.

1056
02:43:18.030 --> 02:43:21.450
(Stein) Runar Bergheim: And but still it has some performance issues because

1057
02:43:22.560 --> 02:43:25.860
(Stein) Runar Bergheim: If you would like to have smooth cursor movement and very very

1058
02:43:26.880 --> 02:43:36.120
(Stein) Runar Bergheim: Responsive interfaces, you would need to transfer data on personal positions in roughly every 20 milliseconds, like this.

1059
02:43:36.870 --> 02:43:53.850
(Stein) Runar Bergheim: And that leads, of course, to a lot of data being sent back and forth. So even GeoJSON might be might be too bulky for this. So you might use something like a protocol for something like this to to speed up or minimize the data that are being that are being transferred

1060
02:43:55.650 --> 02:43:56.040
(Stein) Runar Bergheim: And

1061
02:43:57.330 --> 02:43:58.470
(Stein) Runar Bergheim: This is a very simple thing.

1062
02:44:00.180 --> 02:44:09.570
(Stein) Runar Bergheim: But surprisingly, of course, an API that should be able to handle this on the server side needs to include quite a lot of stuff and

1063
02:44:10.440 --> 02:44:24.000
(Stein) Runar Bergheim: We have to have user management. I shouldn't mess up your map, you shouldn't mess up mine. And so even though we allow people to collaborate, we need to have the same permission model as exists in in

1064
02:44:25.620 --> 02:44:31.560
(Stein) Runar Bergheim: In Google Docs, where people can have read access or editor access or comment access, suggest access and so on.

1065
02:44:32.940 --> 02:44:41.190
(Stein) Runar Bergheim: We need to document management needs to be able to upload and download these things and control who can do it and we need methods to handle

1066
02:44:43.170 --> 02:44:45.180
(Stein) Runar Bergheim: Streaming of all these interactions.

1067
02:44:46.230 --> 02:44:53.580
(Stein) Runar Bergheim: From the server to the connected client and the server doesn't really care very much about the rendering of this

1068
02:44:54.690 --> 02:44:57.690
(Stein) Runar Bergheim: It cares just about propagating messages.

1069
02:44:58.950 --> 02:45:10.590
(Stein) Runar Bergheim: But it needs to have some basic level ,so features and properties are represented as GeoSON features are stored in layers layers are stored in map compositions and map composition are rendered as maps on

1070
02:45:12.780 --> 02:45:23.070
(Stein) Runar Bergheim: Their users have cursors that move on the map. Whenever move or hover interaction hover event is detected, it's propagated all connected clients.

1071
02:45:23.850 --> 02:45:34.830
(Stein) Runar Bergheim: And users can add layers to the map and shift the layer order which will also cause the same to happen on all connected clients, but only for the specific map that they're connected to, of course.

1072
02:45:37.260 --> 02:45:42.420
(Stein) Runar Bergheim: So that is the essence of this little feature.

1073
02:45:43.860 --> 02:46:01.770
(Stein) Runar Bergheim: Now is this something to talk about to the OGC is this really a standardized interaction protocol or is it an application feature I can't say with great certainty, if map white boards have a potential beyond being a feature.

1074
02:46:02.820 --> 02:46:04.140
(Stein) Runar Bergheim: But it is something that

1075
02:46:05.280 --> 02:46:15.540
(Stein) Runar Bergheim: Is fairly interesting to the day to day business of many of our, our clients and people who are collaborating across government departments.

1076
02:46:16.620 --> 02:46:25.380
(Stein) Runar Bergheim: Find this intriguing and and have have started to sort of express interest in in buying it and

1077
02:46:26.460 --> 02:46:29.940
(Stein) Runar Bergheim: More politically, they buy it integrated into their solutions.

1078
02:46:31.530 --> 02:46:50.280
(Stein) Runar Bergheim: And the people who are operating field data capturing applications where typically one professional is trying to have a dialogue with a non professional, find this interesting because it allows one person to have a dialogue with another one

1079
02:46:51.690 --> 02:47:00.510
(Stein) Runar Bergheim: While they can see the same thing on the map and they can point, one person can create data. One person can indicate his local knowledge, while working in the same

1080
02:47:01.440 --> 02:47:20.700
(Stein) Runar Bergheim: So perhaps they do. The API that we are making at least would be open and published as an open specification. It's not an open specification, but it will be published as as an open thing and whoever might find it interesting could contribute to it, evolve it or slaughter it at will.

1081
02:47:23.730 --> 02:47:36.120
(Stein) Runar Bergheim: And but then again standardization should not be applied where standardization is not due, so I'm not sure if this is something that we should tout as a standard thing. But I think it's something that is

1082
02:47:36.660 --> 02:47:54.240
(Stein) Runar Bergheim: Relatively interesting, but the discussion section that we have some time for now, 12 minutes, I suppose, specifically, is devoted to the value proposition of this and and I think the discussion should be centered on the value

1083
02:47:56.040 --> 02:48:01.740
(Stein) Runar Bergheim: Creation, rather than revenue creation. I mean, if this can add value to someone or something. It's a good

1084
02:48:02.370 --> 02:48:10.980
(Stein) Runar Bergheim: If it can create revenue that's perhaps interesting but it's not interesting to discuss in a group. And so let's stick to the high road and the nobler goals.

1085
02:48:11.610 --> 02:48:23.670
(Stein) Runar Bergheim: What can we do in terms of creating value. And with that, I shall remain silent. I think and hand the road back to Karel who will moderate this Chris Wallace style. There was no

1086
02:48:24.780 --> 02:48:30.510
(Stein) Runar Bergheim: tokens of obvious violence in the first section. So I imagine this would go well. And this last twelve minutes or so.

1087
02:48:36.480 --> 02:48:36.960
(Stein) Runar Bergheim: So Karel, yours.

1088
02:48:42.600 --> 02:48:43.230
(Stein) Runar Bergheim: Are you still there Karel?

1089
02:48:46.380 --> 02:48:46.740
Karel Charvat: Sorry, I was mute.

1090
02:48:49.530 --> 02:48:51.810
Karel Charvat: One thing is to discuss about potential

1091
02:48:54.270 --> 02:48:56.550
Karel Charvat: Technology can be used as

1092
02:48:57.780 --> 02:48:58.140
Karel Charvat: What

1093
02:48:59.670 --> 02:49:03.060
Karel Charvat: Is my job and I am the most involved is

1094
02:49:03.780 --> 02:49:06.810
Karel Charvat: Farming. And what we see that

1095
02:49:07.890 --> 02:49:13.140
Karel Charvat: There are discuss usage of as observation data and other data and the

1096
02:49:14.190 --> 02:49:17.310
Karel Charvat: Farmer is never using directly

1097
02:49:18.540 --> 02:49:28.170
Karel Charvat: Data and never processing this data. So there is usually some interesting chain or the people who are preparing for data and preparing recommendation.

1098
02:49:28.590 --> 02:49:38.130
Karel Charvat: On other side to the most of farmers hate to work with black box and to be not able to understand why they have to do something so

1099
02:49:39.060 --> 02:49:51.300
Karel Charvat: There is really necessary that the for example advisor, who's preparing some recommendation for farmer, has the possibility to communicate with the farmer, exchange with him

1100
02:49:52.440 --> 02:50:02.490
Karel Charvat: The result, ask him for the comments and in some cases farmer is telling. Okay, I know that this part of the field has different

1101
02:50:04.890 --> 02:50:15.390
Karel Charvat: Behavior and please I would like ask you to change the parameters for, for example, applying of nitrogen in this field and this could be the way how

1102
02:50:16.740 --> 02:50:27.090
Karel Charvat: That could be communicate, of course, I think that the typical things which could be used is any type of planning because usually

1103
02:50:27.720 --> 02:50:46.320
Karel Charvat: Planning is based on the fact that planner is preparing some plan, then it is discuss with public servant if there is, for example, spatial plan, then it is discussed. So is people usually the way sides that the plans are in

1104
02:50:48.870 --> 02:51:00.780
Karel Charvat: Better case visible on the internet,  worst case you have to go to the office and to draw on the maps, what is necessary.

1105
02:51:01.980 --> 02:51:07.080
Karel Charvat: For education, I think that it is also very good

1106
02:51:08.100 --> 02:51:08.940
Karel Charvat: Instrument.

1107
02:51:10.800 --> 02:51:17.370
Karel Charvat: We see the potential in some type of the crisis situation where the

1108
02:51:18.420 --> 02:51:38.670
Karel Charvat: Person who is managing the team can online, put some information for for the user. So there is the number of potential areas where we are thinking and we are now trying to apply this technology. And generally, we will be interested about your ideas next.

1109
02:51:42.690 --> 02:51:44.040
Peter Rushforth: Are you willing to take questions?

1110
02:51:44.880 --> 02:51:52.770
Karel Charvat: Yeah. Yes, yes, we can, yes, you can have some questions, we are ready to answer.

1111
02:51:53.190 --> 02:52:09.150
Peter Rushforth: Great. Well, I have a question from Bryan Haberberger, The Habes in Gitter, says you have essentially done everything besides contextualizing your data. Have you looked into producing five star data.

1112
02:52:10.020 --> 02:52:11.460
Peter Rushforth: And he provide a link so

1113
02:52:11.700 --> 02:52:12.960
Peter Rushforth: Five Star Linked Data.

1114
02:52:13.830 --> 02:52:15.330
Karel Charvat: I think that

1115
02:52:17.460 --> 02:52:19.440
Karel Charvat: Right. This mentions that

1116
02:52:19.770 --> 02:52:30.360
Karel Charvat: We are able to visualize Five Star data. Yes, he mentioned that we are able to read the idea of data. Other things is that our metadata catalog

1117
02:52:31.980 --> 02:52:48.000
Karel Charvat: It is based, initially, it is based on is all this 19150 and 1939 standard, but the this Miska is also supporting meta data in

1118
02:52:49.500 --> 02:53:11.610
Karel Charvat: Geo cut IP saw this five stars meta data, we are working, we are moving in this direction and also know we have some data which are five star like part point of interest. And this is the reason why we are trying to do this. So we are moving to the five star.

1119
02:53:15.240 --> 02:53:17.520
Peter Rushforth: Okay, thanks. So

1120
02:53:19.170 --> 02:53:21.810
Bryan Haberberger: I just wanted to say thank you, I'm Bryan. Thank you.

1121
02:53:22.920 --> 02:53:29.340
Bryan Haberberger: I'm glad, I'm glad that catch the question didn't catch you off guard. I was actually expecting something different. I'm glad you guys have thought about it.

1122
02:53:30.240 --> 02:53:45.510
(Stein) Runar Bergheim: And we have in this Plan4all Association, which we we have introduced a terrible amount of concepts without this explaining what they are here, but this Plan4All Association, we have among others, a few big linked open data sets.

1123
02:53:46.710 --> 02:54:01.050
(Stein) Runar Bergheim: Which are, where are some of the content is the content varies between three and five star according to the standard, and we are trying to use, among other things, this technology in

1124
02:54:02.190 --> 02:54:10.440
(Stein) Runar Bergheim: A coordinated user generated content effort to complete, increase the quality of the data.

1125
02:54:11.520 --> 02:54:19.710
(Stein) Runar Bergheim: To to achieve five star data. So it's, it is close to home in terms of our, our day to day problems.

1126
02:54:21.120 --> 02:54:26.310
Bryan Haberberger: Yes, that's, that's good to hear. How have you looked at the GeoJSON LD specification. Because essentially, if you get

1127
02:54:27.000 --> 02:54:29.670
Bryan Haberberger: You get, you get five star data for free with that context.

1128
02:54:30.090 --> 02:54:32.430
(Stein) Runar Bergheim: Yes, yes, the

1129
02:54:33.600 --> 02:54:39.480
(Stein) Runar Bergheim: Only problem with with every,Yes, yes. I mean, it's, I agree fully. The only problem with standards is that

1130
02:54:40.530 --> 02:54:50.580
(Stein) Runar Bergheim: When we work on developing standards we always, we always become very happy when the standard is finished. But once the standard is finished, we have to populate it so so the population part is

1131
02:54:50.610 --> 02:54:54.480
(Stein) Runar Bergheim: Not going as fast as the standard. But I think the standard is definitely

1132
02:54:57.060 --> 02:54:58.260
(Stein) Runar Bergheim: It's definitely helpful.

1133
02:54:59.280 --> 02:55:04.770
(Stein) Runar Bergheim: To to allow us not to make some sort of massive duplication of effort.

1134
02:55:05.040 --> 02:55:17.400
Bryan Haberberger: Yes, definitely. And all it would do as it exists, is provide that modular support for the GeoJSON and you guys are doing something much more in supporting other formats, which obviously GeoJSON LD would do

1135
02:55:17.430 --> 02:55:25.560
Bryan Haberberger: Nothing for you for this thing, your, your context is much more complicated than just that simple web context for the GeoJSON format.

1136
02:55:26.160 --> 02:55:34.680
(Stein) Runar Bergheim: It is. It's conceivable but then again, I think what we are doing is probably a great deal less complicated than it sounds like, and it's

1137
02:55:35.250 --> 02:55:42.660
(Stein) Runar Bergheim: part by the fact that we have been given an hour to talk about it and we are very intimidated by the presence of all this greatness

1138
02:55:43.200 --> 02:55:52.350
(Stein) Runar Bergheim: In the audience. So we feel the need to wrap it in in scientific sort of rationale. But what we, what we're doing is fairly simple.

1139
02:55:53.040 --> 02:56:09.570
(Stein) Runar Bergheim: shamefully so in comparison with much of what you're doing, but it is sort of a connectivity between what happens on the infrastructure level and the business value that we still think is an interesting part of the value chain, but it might, it might not be

1140
02:56:11.400 --> 02:56:18.210
(Stein) Runar Bergheim: It might not be on the same precision level as as as what happens in the great strategic decisions of the world.

1141
02:56:22.320 --> 02:56:27.540
Bryan Haberberger: Thank you. It was great to see. And that was that's that's the gist of what I wanted to say.

1142
02:56:36.060 --> 02:56:39.990
Peter Rushforth: Well, thank you very much for your discussion and presentation.

1143
02:56:40.110 --> 02:56:44.640
Karel Charvat: Maybe Runar can you go, in a slide deck.

1144
02:56:46.320 --> 02:56:48.390
(Stein) Runar Bergheim: I think I can, think that should be within my cognitive abilities.

1145
02:56:49.110 --> 02:56:49.680
(Stein) Runar Bergheim: This one you mean?

1146
02:56:49.710 --> 02:56:51.540
Karel Charvat: No no no no, this one.

1147
02:56:54.450 --> 02:56:55.440
Karel Charvat: Because this

1148
02:56:56.610 --> 02:57:15.570
Karel Charvat: This development is now included as a part of so called COVID INSPIRE hackathon. It is the UN, which is running two months and the first what Raitis presented in his talk, in this first challenge and the second is

1149
02:57:17.070 --> 02:57:33.210
Karel Charvat: In this challenge. So if anybody will be interested to discuss these things with us, we will be very happy to invite you and to continue in the discussion because this development will continue.

1150
02:57:34.470 --> 02:57:49.680
Karel Charvat: One month and as we mentioned, we are not only trying to finalize the solution, but we are also looking for different business cases. So if you'd be interested, we can share with you more details.

1151
02:57:51.600 --> 02:57:53.730
Peter Rushforth: Do you want to share the links or,

1152
02:57:54.540 --> 02:57:55.590
Karel Charvat: In the presentation.

1153
02:57:56.610 --> 02:58:08.970
Karel Charvat: presentation will be available this are the links, I can, I can send or I can share a link later because this is a presentation will be available, it is

1154
02:58:10.080 --> 02:58:11.040
Karel Charvat: Possible to go.

1155
02:58:11.100 --> 02:58:18.180
Bryan Haberberger: If it helps, I just went to the agenda, and I was able to download the PowerPoint. So I have those links now.

1156
02:58:18.810 --> 02:58:20.610
Bryan Haberberger: Okay, they already have it up.

1157
02:58:20.760 --> 02:58:21.720
Bryan Haberberger: I think I'm pretty sure that's what this is.

1158
02:58:21.810 --> 02:58:23.730
Peter Rushforth: Great.

1159
02:58:26.970 --> 02:58:37.950
Karel Charvat: Okay, I think that if there is no more question, I think that our time is almost over Runar, you expected that we will be shorter, but seems that we use all our time.

1160
02:58:39.750 --> 02:58:43.170
(Stein) Runar Bergheim: Well, I don't think there's anyone who will cry for this. I think

1161
02:58:43.650 --> 02:58:53.970
(Stein) Runar Bergheim: People will fall asleep tonight with a ringing, ringing of our voices in their ears and wondering why. So I think we should have preemptively apologize to those and thank everyone for attending.

1162
02:58:54.570 --> 02:59:00.120
Peter Rushforth: Thank you for presenting a very interesting application. It looks like it's going to be a winner.

1163
02:59:03.060 --> 02:59:06.300
Peter Rushforth: So I guess with that, we can, we'll sign off.

1164
02:59:08.130 --> 02:59:13.800
Peter Rushforth: Unless there's some more messages, there's links in the chat that if you want to have a look at those.

1165
02:59:15.150 --> 02:59:29.130
Peter Rushforth: And so we can end the recording and we will post the recordings, as soon as possible and talks as you submit them. So thank you all for participating today and tonight.

1166
02:59:30.210 --> 02:59:32.220
Peter Rushforth: And have a good day. We'll see you tomorrow.

1167
02:59:33.030 --> 02:59:38.370
Karel Charvat: Peter, thank you to give us opportunity to make to present our works. Thank you very much.

1168
02:59:38.460 --> 02:59:39.030
Peter Rushforth: Lovely.

1169
02:59:39.120 --> 02:59:42.120
Bryan Haberberger: Thank you. Yes, thank you, all presenters. That was a great day.

1170
02:59:43.590 --> 02:59:45.180
(Stein) Runar Bergheim: Thank you very much. And the best of days to you.

1171
02:59:45.990 --> 02:59:46.380
Peter Rushforth: Awesome.

1172
02:59:47.010 --> 02:59:48.540
(Stein) Runar Bergheim: I shall return to pine for the fjords

1173
02:59:49.590 --> 02:59:49.860
(Stein) Runar Bergheim: Bye.

1174
02:59:51.900 --> 02:59:52.860
Karel Charvat: See you. Bye.

1175
02:59:53.340 --> 02:59:53.700
Peter Rushforth: Bye bye.

1176
02:59:55.050 --> 02:59:55.470
Raitis B캡rzi켽코 : Bye.
